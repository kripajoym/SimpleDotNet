<?xml version="1.0" encoding="UTF-8"?>
<api_info>
	<package name="System">
		<class name="IFormattable" uniqueID="System.IFormattable">
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.IFormattable.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="MulticastDelegate" uniqueID="System.MulticastDelegate">
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.op_Equality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.op_Inequality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CombineImpl" uniqueID="CombineImpl(System.Delegate):System.Delegate">
				<signature>System.MulticastDelegate.CombineImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorClosed" uniqueID="CtorClosed(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorClosed(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorClosedStatic" uniqueID="CtorClosedStatic(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorClosedStatic(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorOpened" uniqueID="CtorOpened(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorOpened(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorRTClosed" uniqueID="CtorRTClosed(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorRTClosed(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureClosed" uniqueID="CtorSecureClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureClosedStatic" uniqueID="CtorSecureClosedStatic(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureClosedStatic(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureOpened" uniqueID="CtorSecureOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureRTClosed" uniqueID="CtorSecureRTClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureRTClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureVirtualDispatch" uniqueID="CtorSecureVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorVirtualDispatch" uniqueID="CtorVirtualDispatch(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorVirtualDispatch(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeleteFromInvocationList" uniqueID="DeleteFromInvocationList(System.Object[];System.Int32;System.Int32;System.Int32):System.Object[]">
				<signature>System.MulticastDelegate.DeleteFromInvocationList(System.Object[];System.Int32;System.Int32;System.Int32):System.Object[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EqualInvocationLists" uniqueID="EqualInvocationLists(System.Object[];System.Object[];System.Int32;System.Int32):System.Boolean">
				<signature>System.MulticastDelegate.EqualInvocationLists(System.Object[];System.Object[];System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.MulticastDelegate.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.MulticastDelegate.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInvocationList" uniqueID="GetInvocationList():System.Delegate[]">
				<signature>System.MulticastDelegate.GetInvocationList():System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl():System.Reflection.MethodInfo">
				<signature>System.MulticastDelegate.GetMethodImpl():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTarget" uniqueID="GetTarget():System.Object">
				<signature>System.MulticastDelegate.GetTarget():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InvocationListEquals" uniqueID="InvocationListEquals(System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.InvocationListEquals(System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsUnmanagedFunctionPtr" uniqueID="IsUnmanagedFunctionPtr():System.Boolean">
				<signature>System.MulticastDelegate.IsUnmanagedFunctionPtr():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MulticastDelegate" uniqueID="MulticastDelegate(System.Object;System.String):System.Void">
				<signature>System.MulticastDelegate.MulticastDelegate(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MulticastDelegate" uniqueID="MulticastDelegate(System.Type;System.String):System.Void">
				<signature>System.MulticastDelegate.MulticastDelegate(System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewMulticastDelegate" uniqueID="NewMulticastDelegate(System.Object[];System.Int32):System.MulticastDelegate">
				<signature>System.MulticastDelegate.NewMulticastDelegate(System.Object[];System.Int32):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewMulticastDelegate" uniqueID="NewMulticastDelegate(System.Object[];System.Int32;System.Boolean):System.MulticastDelegate">
				<signature>System.MulticastDelegate.NewMulticastDelegate(System.Object[];System.Int32;System.Boolean):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveImpl" uniqueID="RemoveImpl(System.Delegate):System.Delegate">
				<signature>System.MulticastDelegate.RemoveImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StoreDynamicMethod" uniqueID="StoreDynamicMethod(System.Reflection.MethodInfo):System.Void">
				<signature>System.MulticastDelegate.StoreDynamicMethod(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ThrowNullThisInDelegateToInstance" uniqueID="ThrowNullThisInDelegateToInstance():System.Void">
				<signature>System.MulticastDelegate.ThrowNullThisInDelegateToInstance():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrySetSlot" uniqueID="TrySetSlot(System.Object[];System.Int32;System.Object):System.Boolean">
				<signature>System.MulticastDelegate.TrySetSlot(System.Object[];System.Int32;System.Object):System.Boolean</signature>
			</method>
		</class>
		<class name="Object" uniqueID="System.Object">
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.Object;System.Object):System.Boolean">
				<signature>System.Object.Equals(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalEquals" uniqueID="InternalEquals(System.Object;System.Object):System.Boolean">
				<signature>System.Object.InternalEquals(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalGetHashCode" uniqueID="InternalGetHashCode(System.Object):System.Int32">
				<signature>System.Object.InternalGetHashCode(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReferenceEquals" uniqueID="ReferenceEquals(System.Object;System.Object):System.Boolean">
				<signature>System.Object.ReferenceEquals(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Object.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FieldGetter" uniqueID="FieldGetter(System.String;System.String;System.Object):System.Void">
				<signature>System.Object.FieldGetter(System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FieldSetter" uniqueID="FieldSetter(System.String;System.String;System.Object):System.Void">
				<signature>System.Object.FieldSetter(System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finalize" uniqueID="Finalize():System.Void">
				<signature>System.Object.Finalize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetFieldInfo" uniqueID="GetFieldInfo(System.String;System.String):System.Reflection.FieldInfo">
				<signature>System.Object.GetFieldInfo(System.String;System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Object.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Object.GetType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberwiseClone" uniqueID="MemberwiseClone():System.Object">
				<signature>System.Object.MemberwiseClone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Object" uniqueID="Object():System.Void">
				<signature>System.Object.Object():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Object.ToString():System.String</signature>
			</method>
		</class>
		<class name="Environment" uniqueID="System.Environment">
			<method accessibility="Private" methodKind="Static" name="CheckEnvironmentVariableName" uniqueID="CheckEnvironmentVariableName(System.String):System.Void">
				<signature>System.Environment.CheckEnvironmentVariableName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Exit" uniqueID="Exit(System.Int32):System.Void">
				<signature>System.Environment.Exit(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ExitNative" uniqueID="ExitNative(System.Int32):System.Void">
				<signature>System.Environment.ExitNative(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ExpandEnvironmentVariables" uniqueID="ExpandEnvironmentVariables(System.String):System.String">
				<signature>System.Environment.ExpandEnvironmentVariables(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FailFast" uniqueID="FailFast(System.String):System.Void">
				<signature>System.Environment.FailFast(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCommandLineArgs" uniqueID="GetCommandLineArgs():System.String[]">
				<signature>System.Environment.GetCommandLineArgs():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetCommandLineArgsNative" uniqueID="GetCommandLineArgsNative():System.String[]">
				<signature>System.Environment.GetCommandLineArgsNative():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetCommandLineNative" uniqueID="GetCommandLineNative():System.String">
				<signature>System.Environment.GetCommandLineNative():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCompatibilityFlag" uniqueID="GetCompatibilityFlag(System.CompatibilityFlag):System.Boolean">
				<signature>System.Environment.GetCompatibilityFlag(System.CompatibilityFlag):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetEnvironmentVariable" uniqueID="GetEnvironmentVariable(System.String):System.String">
				<signature>System.Environment.GetEnvironmentVariable(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetEnvironmentVariable" uniqueID="GetEnvironmentVariable(System.String;System.EnvironmentVariableTarget):System.String">
				<signature>System.Environment.GetEnvironmentVariable(System.String;System.EnvironmentVariableTarget):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetEnvironmentVariables" uniqueID="GetEnvironmentVariables():System.Collections.IDictionary">
				<signature>System.Environment.GetEnvironmentVariables():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetEnvironmentVariables" uniqueID="GetEnvironmentVariables(System.EnvironmentVariableTarget):System.Collections.IDictionary">
				<signature>System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget):System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetFolderPath" uniqueID="GetFolderPath(System.Environment+SpecialFolder):System.String">
				<signature>System.Environment.GetFolderPath(System.Environment+SpecialFolder):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetLogicalDrives" uniqueID="GetLogicalDrives():System.String[]">
				<signature>System.Environment.GetLogicalDrives():System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetRegistryKeyNameValuePairs" uniqueID="GetRegistryKeyNameValuePairs(Microsoft.Win32.RegistryKey):System.Collections.IDictionary">
				<signature>System.Environment.GetRegistryKeyNameValuePairs(Microsoft.Win32.RegistryKey):System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetResourceFromDefault" uniqueID="GetResourceFromDefault(System.String):System.String">
				<signature>System.Environment.GetResourceFromDefault(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetResourceString" uniqueID="GetResourceString(System.String):System.String">
				<signature>System.Environment.GetResourceString(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetResourceString" uniqueID="GetResourceString(System.String;System.Object[]):System.String">
				<signature>System.Environment.GetResourceString(System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetResourceStringLocal" uniqueID="GetResourceStringLocal(System.String):System.String">
				<signature>System.Environment.GetResourceStringLocal(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetStackTrace" uniqueID="GetStackTrace(System.Exception;System.Boolean):System.String">
				<signature>System.Environment.GetStackTrace(System.Exception;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InitResourceHelper" uniqueID="InitResourceHelper():System.Void">
				<signature>System.Environment.InitResourceHelper():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsWin9X" uniqueID="IsWin9X():System.Boolean">
				<signature>System.Environment.IsWin9X():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetEnvironmentVariable" uniqueID="SetEnvironmentVariable(System.String;System.String):System.Void">
				<signature>System.Environment.SetEnvironmentVariable(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetEnvironmentVariable" uniqueID="SetEnvironmentVariable(System.String;System.String;System.EnvironmentVariableTarget):System.Void">
				<signature>System.Environment.SetEnvironmentVariable(System.String;System.String;System.EnvironmentVariableTarget):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CommandLine" uniqueID="get_CommandLine():System.String">
				<signature>System.Environment.get_CommandLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CurrentDirectory" uniqueID="get_CurrentDirectory():System.String">
				<signature>System.Environment.get_CurrentDirectory():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_ExitCode" uniqueID="get_ExitCode():System.Int32">
				<signature>System.Environment.get_ExitCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_HasShutdownStarted" uniqueID="get_HasShutdownStarted():System.Boolean">
				<signature>System.Environment.get_HasShutdownStarted():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_InternalSyncObject" uniqueID="get_InternalSyncObject():System.Object">
				<signature>System.Environment.get_InternalSyncObject():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_InternalWindowsDirectory" uniqueID="get_InternalWindowsDirectory():System.String">
				<signature>System.Environment.get_InternalWindowsDirectory():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_IsW2k3" uniqueID="get_IsW2k3():System.Boolean">
				<signature>System.Environment.get_IsW2k3():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_MachineName" uniqueID="get_MachineName():System.String">
				<signature>System.Environment.get_MachineName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_NewLine" uniqueID="get_NewLine():System.String">
				<signature>System.Environment.get_NewLine():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_OSInfo" uniqueID="get_OSInfo():System.Environment+OSName">
				<signature>System.Environment.get_OSInfo():System.Environment+OSName</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_OSVersion" uniqueID="get_OSVersion():System.OperatingSystem">
				<signature>System.Environment.get_OSVersion():System.OperatingSystem</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_ProcessorCount" uniqueID="get_ProcessorCount():System.Int32">
				<signature>System.Environment.get_ProcessorCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_RunningOnWinNT" uniqueID="get_RunningOnWinNT():System.Boolean">
				<signature>System.Environment.get_RunningOnWinNT():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_StackTrace" uniqueID="get_StackTrace():System.String">
				<signature>System.Environment.get_StackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_SystemDirectory" uniqueID="get_SystemDirectory():System.String">
				<signature>System.Environment.get_SystemDirectory():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_TickCount" uniqueID="get_TickCount():System.Int32">
				<signature>System.Environment.get_TickCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_UserDomainName" uniqueID="get_UserDomainName():System.String">
				<signature>System.Environment.get_UserDomainName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_UserInteractive" uniqueID="get_UserInteractive():System.Boolean">
				<signature>System.Environment.get_UserInteractive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_UserName" uniqueID="get_UserName():System.String">
				<signature>System.Environment.get_UserName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Version" uniqueID="get_Version():System.Version">
				<signature>System.Environment.get_Version():System.Version</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WorkingSet" uniqueID="get_WorkingSet():System.Int64">
				<signature>System.Environment.get_WorkingSet():System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nativeGetEnvironmentCharArray" uniqueID="nativeGetEnvironmentCharArray():System.Char[]">
				<signature>System.Environment.nativeGetEnvironmentCharArray():System.Char[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeGetEnvironmentVariable" uniqueID="nativeGetEnvironmentVariable(System.String):System.String">
				<signature>System.Environment.nativeGetEnvironmentVariable(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nativeGetExitCode" uniqueID="nativeGetExitCode():System.Int32">
				<signature>System.Environment.nativeGetExitCode():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nativeGetTickCount" uniqueID="nativeGetTickCount():System.Int32">
				<signature>System.Environment.nativeGetTickCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeGetWorkingSet" uniqueID="nativeGetWorkingSet():System.Int64">
				<signature>System.Environment.nativeGetWorkingSet():System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nativeHasShutdownStarted" uniqueID="nativeHasShutdownStarted():System.Boolean">
				<signature>System.Environment.nativeHasShutdownStarted():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeIsWin9x" uniqueID="nativeIsWin9x():System.Boolean">
				<signature>System.Environment.nativeIsWin9x():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nativeSetExitCode" uniqueID="nativeSetExitCode(System.Int32):System.Void">
				<signature>System.Environment.nativeSetExitCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CurrentDirectory" uniqueID="set_CurrentDirectory(System.String):System.Void">
				<signature>System.Environment.set_CurrentDirectory(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_ExitCode" uniqueID="set_ExitCode(System.Int32):System.Void">
				<signature>System.Environment.set_ExitCode(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="ValueType" uniqueID="System.ValueType">
			<method accessibility="Private" methodKind="Static" name="CanCompareBits" uniqueID="CanCompareBits(System.Object):System.Boolean">
				<signature>System.ValueType.CanCompareBits(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FastEqualsCheck" uniqueID="FastEqualsCheck(System.Object;System.Object):System.Boolean">
				<signature>System.ValueType.FastEqualsCheck(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetHashCodeOfPtr" uniqueID="GetHashCodeOfPtr(System.IntPtr):System.Int32">
				<signature>System.ValueType.GetHashCodeOfPtr(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.ValueType.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.ValueType.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.ValueType.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValueType" uniqueID="ValueType():System.Void">
				<signature>System.ValueType.ValueType():System.Void</signature>
			</method>
		</class>
		<class name="Char" uniqueID="System.Char">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Char.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckLetter" uniqueID="CheckLetter(System.Globalization.UnicodeCategory):System.Boolean">
				<signature>System.Char.CheckLetter(System.Globalization.UnicodeCategory):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckLetterOrDigit" uniqueID="CheckLetterOrDigit(System.Globalization.UnicodeCategory):System.Boolean">
				<signature>System.Char.CheckLetterOrDigit(System.Globalization.UnicodeCategory):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckNumber" uniqueID="CheckNumber(System.Globalization.UnicodeCategory):System.Boolean">
				<signature>System.Char.CheckNumber(System.Globalization.UnicodeCategory):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckPunctuation" uniqueID="CheckPunctuation(System.Globalization.UnicodeCategory):System.Boolean">
				<signature>System.Char.CheckPunctuation(System.Globalization.UnicodeCategory):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckSeparator" uniqueID="CheckSeparator(System.Globalization.UnicodeCategory):System.Boolean">
				<signature>System.Char.CheckSeparator(System.Globalization.UnicodeCategory):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckSymbol" uniqueID="CheckSymbol(System.Globalization.UnicodeCategory):System.Boolean">
				<signature>System.Char.CheckSymbol(System.Globalization.UnicodeCategory):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConvertFromUtf32" uniqueID="ConvertFromUtf32(System.Int32):System.String">
				<signature>System.Char.ConvertFromUtf32(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConvertToUtf32" uniqueID="ConvertToUtf32(System.Char;System.Char):System.Int32">
				<signature>System.Char.ConvertToUtf32(System.Char;System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConvertToUtf32" uniqueID="ConvertToUtf32(System.String;System.Int32):System.Int32">
				<signature>System.Char.ConvertToUtf32(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetLatin1UnicodeCategory" uniqueID="GetLatin1UnicodeCategory(System.Char):System.Globalization.UnicodeCategory">
				<signature>System.Char.GetLatin1UnicodeCategory(System.Char):System.Globalization.UnicodeCategory</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetNumericValue" uniqueID="GetNumericValue(System.Char):System.Double">
				<signature>System.Char.GetNumericValue(System.Char):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetNumericValue" uniqueID="GetNumericValue(System.String;System.Int32):System.Double">
				<signature>System.Char.GetNumericValue(System.String;System.Int32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUnicodeCategory" uniqueID="GetUnicodeCategory(System.Char):System.Globalization.UnicodeCategory">
				<signature>System.Char.GetUnicodeCategory(System.Char):System.Globalization.UnicodeCategory</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUnicodeCategory" uniqueID="GetUnicodeCategory(System.String;System.Int32):System.Globalization.UnicodeCategory">
				<signature>System.Char.GetUnicodeCategory(System.String;System.Int32):System.Globalization.UnicodeCategory</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsAscii" uniqueID="IsAscii(System.Char):System.Boolean">
				<signature>System.Char.IsAscii(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsControl" uniqueID="IsControl(System.Char):System.Boolean">
				<signature>System.Char.IsControl(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsControl" uniqueID="IsControl(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsControl(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDigit" uniqueID="IsDigit(System.Char):System.Boolean">
				<signature>System.Char.IsDigit(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDigit" uniqueID="IsDigit(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsDigit(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsHighSurrogate" uniqueID="IsHighSurrogate(System.Char):System.Boolean">
				<signature>System.Char.IsHighSurrogate(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsHighSurrogate" uniqueID="IsHighSurrogate(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsHighSurrogate(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsLatin1" uniqueID="IsLatin1(System.Char):System.Boolean">
				<signature>System.Char.IsLatin1(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLetter" uniqueID="IsLetter(System.Char):System.Boolean">
				<signature>System.Char.IsLetter(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLetter" uniqueID="IsLetter(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsLetter(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLetterOrDigit" uniqueID="IsLetterOrDigit(System.Char):System.Boolean">
				<signature>System.Char.IsLetterOrDigit(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLetterOrDigit" uniqueID="IsLetterOrDigit(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsLetterOrDigit(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLowSurrogate" uniqueID="IsLowSurrogate(System.Char):System.Boolean">
				<signature>System.Char.IsLowSurrogate(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLowSurrogate" uniqueID="IsLowSurrogate(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsLowSurrogate(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLower" uniqueID="IsLower(System.Char):System.Boolean">
				<signature>System.Char.IsLower(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsLower" uniqueID="IsLower(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsLower(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsNumber" uniqueID="IsNumber(System.Char):System.Boolean">
				<signature>System.Char.IsNumber(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsNumber" uniqueID="IsNumber(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsNumber(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsPunctuation" uniqueID="IsPunctuation(System.Char):System.Boolean">
				<signature>System.Char.IsPunctuation(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsPunctuation" uniqueID="IsPunctuation(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsPunctuation(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSeparator" uniqueID="IsSeparator(System.Char):System.Boolean">
				<signature>System.Char.IsSeparator(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSeparator" uniqueID="IsSeparator(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsSeparator(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsSeparatorLatin1" uniqueID="IsSeparatorLatin1(System.Char):System.Boolean">
				<signature>System.Char.IsSeparatorLatin1(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSurrogate" uniqueID="IsSurrogate(System.Char):System.Boolean">
				<signature>System.Char.IsSurrogate(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSurrogate" uniqueID="IsSurrogate(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsSurrogate(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSurrogatePair" uniqueID="IsSurrogatePair(System.Char;System.Char):System.Boolean">
				<signature>System.Char.IsSurrogatePair(System.Char;System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSurrogatePair" uniqueID="IsSurrogatePair(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsSurrogatePair(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSymbol" uniqueID="IsSymbol(System.Char):System.Boolean">
				<signature>System.Char.IsSymbol(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsSymbol" uniqueID="IsSymbol(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsSymbol(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsUpper" uniqueID="IsUpper(System.Char):System.Boolean">
				<signature>System.Char.IsUpper(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsUpper" uniqueID="IsUpper(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsUpper(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsWhiteSpace" uniqueID="IsWhiteSpace(System.Char):System.Boolean">
				<signature>System.Char.IsWhiteSpace(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsWhiteSpace" uniqueID="IsWhiteSpace(System.String;System.Int32):System.Boolean">
				<signature>System.Char.IsWhiteSpace(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsWhiteSpaceLatin1" uniqueID="IsWhiteSpaceLatin1(System.Char):System.Boolean">
				<signature>System.Char.IsWhiteSpaceLatin1(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.Char">
				<signature>System.Char.Parse(System.String):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToLower" uniqueID="ToLower(System.Char):System.Char">
				<signature>System.Char.ToLower(System.Char):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToLower" uniqueID="ToLower(System.Char;System.Globalization.CultureInfo):System.Char">
				<signature>System.Char.ToLower(System.Char;System.Globalization.CultureInfo):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToLowerInvariant" uniqueID="ToLowerInvariant(System.Char):System.Char">
				<signature>System.Char.ToLowerInvariant(System.Char):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Char):System.String">
				<signature>System.Char.ToString(System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUpper" uniqueID="ToUpper(System.Char):System.Char">
				<signature>System.Char.ToUpper(System.Char):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUpper" uniqueID="ToUpper(System.Char;System.Globalization.CultureInfo):System.Char">
				<signature>System.Char.ToUpper(System.Char;System.Globalization.CultureInfo):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUpperInvariant" uniqueID="ToUpperInvariant(System.Char):System.Char">
				<signature>System.Char.ToUpperInvariant(System.Char):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Char):System.Boolean">
				<signature>System.Char.TryParse(System.String;System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Char):System.Int32">
				<signature>System.Char.CompareTo(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Char.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Char):System.Boolean">
				<signature>System.Char.Equals(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Char.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Char.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Char.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Char.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Char.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Char.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Char.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Char.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Char.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Char.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Char.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Char.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Char.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Char.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Char.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Char.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Char.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Char.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Char.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Char.ToString(System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="IComparable" uniqueID="System.IComparable">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.IComparable.CompareTo(System.Object):System.Int32</signature>
			</method>
		</class>
		<class name="Delegate" uniqueID="System.Delegate">
			<method accessibility="Public" methodKind="Static" name="Combine" uniqueID="Combine(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.Combine(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Combine" uniqueID="Combine(System.Delegate[]):System.Delegate">
				<signature>System.Delegate.Combine(System.Delegate[]):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.RuntimeMethodHandle):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.RuntimeMethodHandle):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String;System.Boolean;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String;System.Boolean;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Reflection.MethodInfo;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Reflection.MethodInfo;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String;System.Boolean;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String;System.Boolean;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalAlloc" uniqueID="InternalAlloc(System.RuntimeTypeHandle):System.MulticastDelegate">
				<signature>System.Delegate.InternalAlloc(System.RuntimeTypeHandle):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalAllocLike" uniqueID="InternalAllocLike(System.Delegate):System.MulticastDelegate">
				<signature>System.Delegate.InternalAllocLike(System.Delegate):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalCreateDelegate" uniqueID="InternalCreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.InternalCreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalEqualTypes" uniqueID="InternalEqualTypes(System.Object;System.Object):System.Boolean">
				<signature>System.Delegate.InternalEqualTypes(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Remove" uniqueID="Remove(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.Remove(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RemoveAll" uniqueID="RemoveAll(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.RemoveAll(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.op_Equality(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.op_Inequality(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AdjustTarget" uniqueID="AdjustTarget(System.Object;System.IntPtr):System.IntPtr">
				<signature>System.Delegate.AdjustTarget(System.Object;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BindToMethodInfo" uniqueID="BindToMethodInfo(System.Object;System.RuntimeMethodHandle;System.RuntimeTypeHandle;System.DelegateBindingFlags):System.Boolean">
				<signature>System.Delegate.BindToMethodInfo(System.Object;System.RuntimeMethodHandle;System.RuntimeTypeHandle;System.DelegateBindingFlags):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BindToMethodName" uniqueID="BindToMethodName(System.Object;System.RuntimeTypeHandle;System.String;System.DelegateBindingFlags):System.Boolean">
				<signature>System.Delegate.BindToMethodName(System.Object;System.RuntimeTypeHandle;System.String;System.DelegateBindingFlags):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.Delegate.Clone():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CombineImpl" uniqueID="CombineImpl(System.Delegate):System.Delegate">
				<signature>System.Delegate.CombineImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Delegate" uniqueID="Delegate():System.Void">
				<signature>System.Delegate.Delegate():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Delegate" uniqueID="Delegate(System.Object;System.String):System.Void">
				<signature>System.Delegate.Delegate(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Delegate" uniqueID="Delegate(System.Type;System.String):System.Void">
				<signature>System.Delegate.Delegate(System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DelegateConstruct" uniqueID="DelegateConstruct(System.Object;System.IntPtr):System.Void">
				<signature>System.Delegate.DelegateConstruct(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DynamicInvoke" uniqueID="DynamicInvoke(System.Object[]):System.Object">
				<signature>System.Delegate.DynamicInvoke(System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DynamicInvokeImpl" uniqueID="DynamicInvokeImpl(System.Object[]):System.Object">
				<signature>System.Delegate.DynamicInvokeImpl(System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Delegate.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindMethodHandle" uniqueID="FindMethodHandle():System.RuntimeMethodHandle">
				<signature>System.Delegate.FindMethodHandle():System.RuntimeMethodHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCallStub" uniqueID="GetCallStub(System.IntPtr):System.IntPtr">
				<signature>System.Delegate.GetCallStub(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Delegate.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInvocationList" uniqueID="GetInvocationList():System.Delegate[]">
				<signature>System.Delegate.GetInvocationList():System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInvokeMethod" uniqueID="GetInvokeMethod():System.IntPtr">
				<signature>System.Delegate.GetInvokeMethod():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl():System.Reflection.MethodInfo">
				<signature>System.Delegate.GetMethodImpl():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMulticastInvoke" uniqueID="GetMulticastInvoke():System.IntPtr">
				<signature>System.Delegate.GetMulticastInvoke():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTarget" uniqueID="GetTarget():System.Object">
				<signature>System.Delegate.GetTarget():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUnmanagedCallSite" uniqueID="GetUnmanagedCallSite():System.IntPtr">
				<signature>System.Delegate.GetUnmanagedCallSite():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveImpl" uniqueID="RemoveImpl(System.Delegate):System.Delegate">
				<signature>System.Delegate.RemoveImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Method" uniqueID="get_Method():System.Reflection.MethodInfo">
				<signature>System.Delegate.get_Method():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Target" uniqueID="get_Target():System.Object">
				<signature>System.Delegate.get_Target():System.Object</signature>
			</method>
		</class>
		<class name="ICloneable" uniqueID="System.ICloneable">
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.ICloneable.Clone():System.Object</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.Int32&gt;" uniqueID="System.IComparable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Int32):System.Int32">
				<signature>System.IComparable&lt;System.Int32&gt;.CompareTo(System.Int32):System.Int32</signature>
			</method>
		</class>
		<class name="IDisposable" uniqueID="System.IDisposable">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.IDisposable.Dispose():System.Void</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.Byte&gt;" uniqueID="System.IEquatable&lt;System.Byte&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Byte):System.Boolean">
				<signature>System.IEquatable&lt;System.Byte&gt;.Equals(System.Byte):System.Boolean</signature>
			</method>
		</class>
		<class name="IConvertible" uniqueID="System.IConvertible">
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.IConvertible.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToBoolean" uniqueID="ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToByte" uniqueID="ToByte(System.IFormatProvider):System.Byte">
				<signature>System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToChar" uniqueID="ToChar(System.IFormatProvider):System.Char">
				<signature>System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDateTime" uniqueID="ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDecimal" uniqueID="ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDouble" uniqueID="ToDouble(System.IFormatProvider):System.Double">
				<signature>System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt16" uniqueID="ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt32" uniqueID="ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt64" uniqueID="ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToSByte" uniqueID="ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToSingle" uniqueID="ToSingle(System.IFormatProvider):System.Single">
				<signature>System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.IConvertible.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToType" uniqueID="ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt16" uniqueID="ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt32" uniqueID="ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt64" uniqueID="ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
		</class>
		<class name="Enum" uniqueID="System.Enum">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Enum.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.UInt64[];System.UInt64):System.Int32">
				<signature>System.Enum.BinarySearch(System.UInt64[];System.UInt64):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.Type;System.Object;System.String):System.String">
				<signature>System.Enum.Format(System.Type;System.Object;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetHashEntry" uniqueID="GetHashEntry(System.Type):System.Enum+HashEntry">
				<signature>System.Enum.GetHashEntry(System.Type):System.Enum+HashEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetName" uniqueID="GetName(System.Type;System.Object):System.String">
				<signature>System.Enum.GetName(System.Type;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetNames" uniqueID="GetNames(System.Type):System.String[]">
				<signature>System.Enum.GetNames(System.Type):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUnderlyingType" uniqueID="GetUnderlyingType(System.Type):System.Type">
				<signature>System.Enum.GetUnderlyingType(System.Type):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetValueField" uniqueID="GetValueField(System.Type):System.Reflection.FieldInfo">
				<signature>System.Enum.GetValueField(System.Type):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetValues" uniqueID="GetValues(System.Type):System.Array">
				<signature>System.Enum.GetValues(System.Type):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalBoxEnum" uniqueID="InternalBoxEnum(System.Type;System.Int64):System.Object">
				<signature>System.Enum.InternalBoxEnum(System.Type;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalCompareTo" uniqueID="InternalCompareTo(System.Object;System.Object):System.Int32">
				<signature>System.Enum.InternalCompareTo(System.Object;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFlagsFormat" uniqueID="InternalFlagsFormat(System.Type;System.Object):System.String">
				<signature>System.Enum.InternalFlagsFormat(System.Type;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFormat" uniqueID="InternalFormat(System.Type;System.Object):System.String">
				<signature>System.Enum.InternalFormat(System.Type;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFormattedHexString" uniqueID="InternalFormattedHexString(System.Object):System.String">
				<signature>System.Enum.InternalFormattedHexString(System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetEnumValues" uniqueID="InternalGetEnumValues(System.Type;System.UInt64[];System.String[]):System.Void">
				<signature>System.Enum.InternalGetEnumValues(System.Type;System.UInt64[];System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetUnderlyingType" uniqueID="InternalGetUnderlyingType(System.Type):System.Type">
				<signature>System.Enum.InternalGetUnderlyingType(System.Type):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetValueAsString" uniqueID="InternalGetValueAsString(System.Type;System.Object):System.String">
				<signature>System.Enum.InternalGetValueAsString(System.Type;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Type;System.Object):System.Boolean">
				<signature>System.Enum.IsDefined(System.Type;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.Type;System.String):System.Object">
				<signature>System.Enum.Parse(System.Type;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.Type;System.String;System.Boolean):System.Object">
				<signature>System.Enum.Parse(System.Type;System.String;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Byte):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Byte):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int16):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int16):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int32):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int64):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Object):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.SByte):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.SByte):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt16):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt16):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt32):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt64):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt64):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Object):System.UInt64">
				<signature>System.Enum.ToUInt64(System.Object):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Enum.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Enum" uniqueID="Enum():System.Void">
				<signature>System.Enum.Enum():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Enum.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Enum.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Enum.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetValue" uniqueID="GetValue():System.Object">
				<signature>System.Enum.GetValue():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetValue" uniqueID="InternalGetValue():System.Object">
				<signature>System.Enum.InternalGetValue():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Enum.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Enum.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Enum.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Enum.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Enum.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Enum.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Enum.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Enum.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Enum.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Enum.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Enum.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Enum.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Enum.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Enum.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Enum.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ToHexString" uniqueID="ToHexString():System.String">
				<signature>System.Enum.ToHexString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Enum.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Enum.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Enum.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Enum.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Action&lt;System.String&gt;" uniqueID="System.Action&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.String&gt;" uniqueID="Action&lt;System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.String&gt;.Action&lt;System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.String;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.String&gt;.BeginInvoke(System.String;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.String&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.String):System.Void">
				<signature>System.Action&lt;System.String&gt;.Invoke(System.String):System.Void</signature>
			</method>
		</class>
		<class name="Array" uniqueID="System.Array">
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Int32;System.Int32;System.Object):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Int32;System.Int32;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Clear" uniqueID="Clear(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Clear(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConstrainedCopy" uniqueID="ConstrainedCopy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.ConstrainedCopy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Array;System.Int32):System.Void">
				<signature>System.Array.Copy(System.Array;System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Array;System.Int64):System.Void">
				<signature>System.Array.Copy(System.Array;System.Array;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32;System.Boolean):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int64;System.Array;System.Int64;System.Int64):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int64;System.Array;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32;System.Int32;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int64[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int64[]):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMedian" uniqueID="GetMedian(System.Int32;System.Int32):System.Int32">
				<signature>System.Array.GetMedian(System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object;System.Int32):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalCreate" uniqueID="InternalCreate(System.Void;System.Int32;System.Int32;System.Int32):System.Array">
				<signature>System.Array.InternalCreate(System.Void;System.Int32;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalSetValue" uniqueID="InternalSetValue(System.Void;System.Object):System.Void">
				<signature>System.Array.InternalSetValue(System.Void;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object;System.Int32):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Reverse" uniqueID="Reverse(System.Array):System.Void">
				<signature>System.Array.Reverse(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Reverse" uniqueID="Reverse(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Reverse(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array):System.Void">
				<signature>System.Array.Sort(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Sort(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZBinarySearch" uniqueID="TrySZBinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZBinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZIndexOf" uniqueID="TrySZIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZLastIndexOf" uniqueID="TrySZLastIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZLastIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZReverse" uniqueID="TrySZReverse(System.Array;System.Int32;System.Int32):System.Boolean">
				<signature>System.Array.TrySZReverse(System.Array;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZSort" uniqueID="TrySZSort(System.Array;System.Array;System.Int32;System.Int32):System.Boolean">
				<signature>System.Array.TrySZSort(System.Array;System.Array;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Array" uniqueID="Array():System.Void">
				<signature>System.Array.Array():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.Array.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Array.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int64):System.Void">
				<signature>System.Array.CopyTo(System.Array;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDataPtrOffsetInternal" uniqueID="GetDataPtrOffsetInternal():System.Int32">
				<signature>System.Array.GetDataPtrOffsetInternal():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Array.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLength" uniqueID="GetLength(System.Int32):System.Int32">
				<signature>System.Array.GetLength(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLongLength" uniqueID="GetLongLength(System.Int32):System.Int64">
				<signature>System.Array.GetLongLength(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLowerBound" uniqueID="GetLowerBound(System.Int32):System.Int32">
				<signature>System.Array.GetLowerBound(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetUpperBound" uniqueID="GetUpperBound(System.Int32):System.Int32">
				<signature>System.Array.GetUpperBound(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32;System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32;System.Int32;System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32;System.Int32;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32[]):System.Object">
				<signature>System.Array.GetValue(System.Int32[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64;System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64;System.Int64;System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64;System.Int64;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64[]):System.Object">
				<signature>System.Array.GetValue(System.Int64[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Array.Initialize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetReference" uniqueID="InternalGetReference(System.Void;System.Int32;System.Int32):System.Void">
				<signature>System.Array.InternalGetReference(System.Void;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32[]):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64;System.Int64;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64[]):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_Count" uniqueID="System.Collections.ICollection.get_Count():System.Int32">
				<signature>System.Array.System.Collections.ICollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Array.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Array.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Array.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Array.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Array.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Array.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Array.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Array.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Array.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int32">
				<signature>System.Array.get_Length():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LongLength" uniqueID="get_LongLength():System.Int64">
				<signature>System.Array.get_LongLength():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Rank" uniqueID="get_Rank():System.Int32">
				<signature>System.Array.get_Rank():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Array.get_SyncRoot():System.Object</signature>
			</method>
		</class>
		<class name="Attribute" uniqueID="System.Attribute">
			<method accessibility="Private" methodKind="Static" name="AddAttributesToList" uniqueID="AddAttributesToList(System.Collections.ArrayList;System.Attribute[];System.Collections.Hashtable):System.Void">
				<signature>System.Attribute.AddAttributesToList(System.Collections.ArrayList;System.Attribute[];System.Collections.Hashtable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyToArrayList" uniqueID="CopyToArrayList(System.Collections.ArrayList;System.Attribute[];System.Collections.Hashtable):System.Void">
				<signature>System.Attribute.CopyToArrayList(System.Collections.ArrayList;System.Attribute[];System.Collections.Hashtable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Assembly;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Assembly;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.MemberInfo;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Module;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Module;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Module;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Module;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.ParameterInfo;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.EventInfo):System.Reflection.EventInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.EventInfo):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.PropertyInfo):System.Reflection.PropertyInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.PropertyInfo):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetAttributeUsage" uniqueID="InternalGetAttributeUsage(System.Type):System.AttributeUsageAttribute">
				<signature>System.Attribute.InternalGetAttributeUsage(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetCustomAttributes" uniqueID="InternalGetCustomAttributes(System.Reflection.EventInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalGetCustomAttributes(System.Reflection.EventInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetCustomAttributes" uniqueID="InternalGetCustomAttributes(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalGetCustomAttributes(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalIsDefined" uniqueID="InternalIsDefined(System.Reflection.EventInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalIsDefined(System.Reflection.EventInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalIsDefined" uniqueID="InternalIsDefined(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalIsDefined(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalParamGetCustomAttributes" uniqueID="InternalParamGetCustomAttributes(System.Reflection.MethodInfo;System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalParamGetCustomAttributes(System.Reflection.MethodInfo;System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalParamIsDefined" uniqueID="InternalParamIsDefined(System.Reflection.MethodInfo;System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalParamIsDefined(System.Reflection.MethodInfo;System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Assembly;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Assembly;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Assembly;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Assembly;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.MemberInfo;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.MemberInfo;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Module;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Module;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Module;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Module;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.ParameterInfo;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.ParameterInfo;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Attribute" uniqueID="Attribute():System.Void">
				<signature>System.Attribute.Attribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Attribute.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Attribute.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefaultAttribute" uniqueID="IsDefaultAttribute():System.Boolean">
				<signature>System.Attribute.IsDefaultAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Match" uniqueID="Match(System.Object):System.Boolean">
				<signature>System.Attribute.Match(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetTypeInfo" uniqueID="System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.Invoke" uniqueID="System.Runtime.InteropServices._Attribute.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeId" uniqueID="get_TypeId():System.Object">
				<signature>System.Attribute.get_TypeId():System.Object</signature>
			</method>
		</class>
		<class name="AttributeUsageAttribute" uniqueID="System.AttributeUsageAttribute">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.AttributeUsageAttribute.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AttributeUsageAttribute" uniqueID="AttributeUsageAttribute(System.AttributeTargets):System.Void">
				<signature>System.AttributeUsageAttribute.AttributeUsageAttribute(System.AttributeTargets):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AttributeUsageAttribute" uniqueID="AttributeUsageAttribute(System.AttributeTargets;System.Boolean;System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.AttributeUsageAttribute(System.AttributeTargets;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowMultiple" uniqueID="get_AllowMultiple():System.Boolean">
				<signature>System.AttributeUsageAttribute.get_AllowMultiple():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Inherited" uniqueID="get_Inherited():System.Boolean">
				<signature>System.AttributeUsageAttribute.get_Inherited():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidOn" uniqueID="get_ValidOn():System.AttributeTargets">
				<signature>System.AttributeUsageAttribute.get_ValidOn():System.AttributeTargets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowMultiple" uniqueID="set_AllowMultiple(System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.set_AllowMultiple(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Inherited" uniqueID="set_Inherited(System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.set_Inherited(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.Byte&gt;" uniqueID="System.IComparable&lt;System.Byte&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Byte):System.Int32">
				<signature>System.IComparable&lt;System.Byte&gt;.CompareTo(System.Byte):System.Int32</signature>
			</method>
		</class>
		<class name="Byte" uniqueID="System.Byte">
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.Byte">
				<signature>System.Byte.Parse(System.String):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles):System.Byte">
				<signature>System.Byte.Parse(System.String;System.Globalization.NumberStyles):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles;System.Globalization.NumberFormatInfo):System.Byte">
				<signature>System.Byte.Parse(System.String;System.Globalization.NumberStyles;System.Globalization.NumberFormatInfo):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Byte">
				<signature>System.Byte.Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.IFormatProvider):System.Byte">
				<signature>System.Byte.Parse(System.String;System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Byte):System.Boolean">
				<signature>System.Byte.TryParse(System.String;System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Globalization.NumberStyles;System.Globalization.NumberFormatInfo;System.Byte):System.Boolean">
				<signature>System.Byte.TryParse(System.String;System.Globalization.NumberStyles;System.Globalization.NumberFormatInfo;System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Byte):System.Boolean">
				<signature>System.Byte.TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Byte):System.Int32">
				<signature>System.Byte.CompareTo(System.Byte):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Byte.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Byte):System.Boolean">
				<signature>System.Byte.Equals(System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Byte.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Byte.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Byte.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Byte.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Byte.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Byte.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Byte.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Byte.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Byte.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Byte.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Byte.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Byte.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Byte.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Byte.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Byte.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Byte.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Byte.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Byte.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Byte.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Byte.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Byte.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Byte.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.Char&gt;" uniqueID="System.IComparable&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Char):System.Int32">
				<signature>System.IComparable&lt;System.Char&gt;.CompareTo(System.Char):System.Int32</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.Char&gt;" uniqueID="System.IEquatable&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Char):System.Boolean">
				<signature>System.IEquatable&lt;System.Char&gt;.Equals(System.Char):System.Boolean</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.String&gt;" uniqueID="System.Comparison&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.String;System.String;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.String&gt;.BeginInvoke(System.String;System.String;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.String&gt;" uniqueID="Comparison&lt;System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.String&gt;.Comparison&lt;System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.String&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.String;System.String):System.Int32">
				<signature>System.Comparison&lt;System.String&gt;.Invoke(System.String;System.String):System.Int32</signature>
			</method>
		</class>
		<class name="Console" uniqueID="System.Console">
			<method accessibility="Public" methodKind="Static" name="Beep" uniqueID="Beep():System.Void">
				<signature>System.Console.Beep():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Beep" uniqueID="Beep(System.Int32;System.Int32):System.Void">
				<signature>System.Console.Beep(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="BreakEvent" uniqueID="BreakEvent(System.Int32):System.Boolean">
				<signature>System.Console.BreakEvent(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Console.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ColorAttributeToConsoleColor" uniqueID="ColorAttributeToConsoleColor(Microsoft.Win32.Win32Native+Color):System.ConsoleColor">
				<signature>System.Console.ColorAttributeToConsoleColor(Microsoft.Win32.Win32Native+Color):System.ConsoleColor</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConsoleColorToColorAttribute" uniqueID="ConsoleColorToColorAttribute(System.ConsoleColor;System.Boolean):Microsoft.Win32.Win32Native+Color">
				<signature>System.Console.ConsoleColorToColorAttribute(System.ConsoleColor;System.Boolean):Microsoft.Win32.Win32Native+Color</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConsoleHandleIsValid" uniqueID="ConsoleHandleIsValid(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean">
				<signature>System.Console.ConsoleHandleIsValid(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ControlCDelegate" uniqueID="ControlCDelegate(System.Object):System.Void">
				<signature>System.Console.ControlCDelegate(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetBufferInfo" uniqueID="GetBufferInfo():Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO">
				<signature>System.Console.GetBufferInfo():Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetBufferInfo" uniqueID="GetBufferInfo(System.Boolean;System.Boolean):Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO">
				<signature>System.Console.GetBufferInfo(System.Boolean;System.Boolean):Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetStandardFile" uniqueID="GetStandardFile(System.Int32;System.IO.FileAccess;System.Int32):System.IO.Stream">
				<signature>System.Console.GetStandardFile(System.Int32;System.IO.FileAccess;System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InitializeStdOutError" uniqueID="InitializeStdOutError(System.Boolean):System.Void">
				<signature>System.Console.InitializeStdOutError(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsKeyDownEvent" uniqueID="IsKeyDownEvent(Microsoft.Win32.Win32Native+InputRecord):System.Boolean">
				<signature>System.Console.IsKeyDownEvent(Microsoft.Win32.Win32Native+InputRecord):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsModKey" uniqueID="IsModKey(System.Int16):System.Boolean">
				<signature>System.Console.IsModKey(System.Int16):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MoveBufferArea" uniqueID="MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.Console.MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MoveBufferArea" uniqueID="MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Char;System.ConsoleColor;System.ConsoleColor):System.Void">
				<signature>System.Console.MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Char;System.ConsoleColor;System.ConsoleColor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardError" uniqueID="OpenStandardError():System.IO.Stream">
				<signature>System.Console.OpenStandardError():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardError" uniqueID="OpenStandardError(System.Int32):System.IO.Stream">
				<signature>System.Console.OpenStandardError(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardInput" uniqueID="OpenStandardInput():System.IO.Stream">
				<signature>System.Console.OpenStandardInput():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardInput" uniqueID="OpenStandardInput(System.Int32):System.IO.Stream">
				<signature>System.Console.OpenStandardInput(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardOutput" uniqueID="OpenStandardOutput():System.IO.Stream">
				<signature>System.Console.OpenStandardOutput():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardOutput" uniqueID="OpenStandardOutput(System.Int32):System.IO.Stream">
				<signature>System.Console.OpenStandardOutput(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Read" uniqueID="Read():System.Int32">
				<signature>System.Console.Read():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadKey" uniqueID="ReadKey():System.ConsoleKeyInfo">
				<signature>System.Console.ReadKey():System.ConsoleKeyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadKey" uniqueID="ReadKey(System.Boolean):System.ConsoleKeyInfo">
				<signature>System.Console.ReadKey(System.Boolean):System.ConsoleKeyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadLine" uniqueID="ReadLine():System.String">
				<signature>System.Console.ReadLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ResetColor" uniqueID="ResetColor():System.Void">
				<signature>System.Console.ResetColor():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetBufferSize" uniqueID="SetBufferSize(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetBufferSize(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetCursorPosition" uniqueID="SetCursorPosition(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetCursorPosition(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetError" uniqueID="SetError(System.IO.TextWriter):System.Void">
				<signature>System.Console.SetError(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetIn" uniqueID="SetIn(System.IO.TextReader):System.Void">
				<signature>System.Console.SetIn(System.IO.TextReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetOut" uniqueID="SetOut(System.IO.TextWriter):System.Void">
				<signature>System.Console.SetOut(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetWindowPosition" uniqueID="SetWindowPosition(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetWindowPosition(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetWindowSize" uniqueID="SetWindowSize(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetWindowSize(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Boolean):System.Void">
				<signature>System.Console.Write(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Char):System.Void">
				<signature>System.Console.Write(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Char[]):System.Void">
				<signature>System.Console.Write(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.Console.Write(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Decimal):System.Void">
				<signature>System.Console.Write(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Double):System.Void">
				<signature>System.Console.Write(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Int32):System.Void">
				<signature>System.Console.Write(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Int64):System.Void">
				<signature>System.Console.Write(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Object):System.Void">
				<signature>System.Console.Write(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Single):System.Void">
				<signature>System.Console.Write(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String):System.Void">
				<signature>System.Console.Write(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object):System.Void">
				<signature>System.Console.Write(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object;System.Object):System.Void">
				<signature>System.Console.Write(System.String;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object;System.Object;System.Object):System.Void">
				<signature>System.Console.Write(System.String;System.Object;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object[]):System.Void">
				<signature>System.Console.Write(System.String;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.UInt32):System.Void">
				<signature>System.Console.Write(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.UInt64):System.Void">
				<signature>System.Console.Write(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine():System.Void">
				<signature>System.Console.WriteLine():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Boolean):System.Void">
				<signature>System.Console.WriteLine(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Char):System.Void">
				<signature>System.Console.WriteLine(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Char[]):System.Void">
				<signature>System.Console.WriteLine(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.Console.WriteLine(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Decimal):System.Void">
				<signature>System.Console.WriteLine(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Double):System.Void">
				<signature>System.Console.WriteLine(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Int32):System.Void">
				<signature>System.Console.WriteLine(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Int64):System.Void">
				<signature>System.Console.WriteLine(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Object):System.Void">
				<signature>System.Console.WriteLine(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Single):System.Void">
				<signature>System.Console.WriteLine(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String):System.Void">
				<signature>System.Console.WriteLine(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object;System.Object):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object;System.Object;System.Object):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object[]):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.UInt32):System.Void">
				<signature>System.Console.WriteLine(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.UInt64):System.Void">
				<signature>System.Console.WriteLine(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="add_CancelKeyPress" uniqueID="add_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void">
				<signature>System.Console.add_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_BackgroundColor" uniqueID="get_BackgroundColor():System.ConsoleColor">
				<signature>System.Console.get_BackgroundColor():System.ConsoleColor</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_BufferHeight" uniqueID="get_BufferHeight():System.Int32">
				<signature>System.Console.get_BufferHeight():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_BufferWidth" uniqueID="get_BufferWidth():System.Int32">
				<signature>System.Console.get_BufferWidth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CapsLock" uniqueID="get_CapsLock():System.Boolean">
				<signature>System.Console.get_CapsLock():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_ConsoleInputHandle" uniqueID="get_ConsoleInputHandle():System.IntPtr">
				<signature>System.Console.get_ConsoleInputHandle():System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_ConsoleOutputHandle" uniqueID="get_ConsoleOutputHandle():System.IntPtr">
				<signature>System.Console.get_ConsoleOutputHandle():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorLeft" uniqueID="get_CursorLeft():System.Int32">
				<signature>System.Console.get_CursorLeft():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorSize" uniqueID="get_CursorSize():System.Int32">
				<signature>System.Console.get_CursorSize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorTop" uniqueID="get_CursorTop():System.Int32">
				<signature>System.Console.get_CursorTop():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorVisible" uniqueID="get_CursorVisible():System.Boolean">
				<signature>System.Console.get_CursorVisible():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Error" uniqueID="get_Error():System.IO.TextWriter">
				<signature>System.Console.get_Error():System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_ForegroundColor" uniqueID="get_ForegroundColor():System.ConsoleColor">
				<signature>System.Console.get_ForegroundColor():System.ConsoleColor</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_In" uniqueID="get_In():System.IO.TextReader">
				<signature>System.Console.get_In():System.IO.TextReader</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_InputEncoding" uniqueID="get_InputEncoding():System.Text.Encoding">
				<signature>System.Console.get_InputEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_InternalSyncObject" uniqueID="get_InternalSyncObject():System.Object">
				<signature>System.Console.get_InternalSyncObject():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_KeyAvailable" uniqueID="get_KeyAvailable():System.Boolean">
				<signature>System.Console.get_KeyAvailable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_LargestWindowHeight" uniqueID="get_LargestWindowHeight():System.Int32">
				<signature>System.Console.get_LargestWindowHeight():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_LargestWindowWidth" uniqueID="get_LargestWindowWidth():System.Int32">
				<signature>System.Console.get_LargestWindowWidth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_NumberLock" uniqueID="get_NumberLock():System.Boolean">
				<signature>System.Console.get_NumberLock():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Out" uniqueID="get_Out():System.IO.TextWriter">
				<signature>System.Console.get_Out():System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_OutputEncoding" uniqueID="get_OutputEncoding():System.Text.Encoding">
				<signature>System.Console.get_OutputEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Title" uniqueID="get_Title():System.String">
				<signature>System.Console.get_Title():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_TreatControlCAsInput" uniqueID="get_TreatControlCAsInput():System.Boolean">
				<signature>System.Console.get_TreatControlCAsInput():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowHeight" uniqueID="get_WindowHeight():System.Int32">
				<signature>System.Console.get_WindowHeight():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowLeft" uniqueID="get_WindowLeft():System.Int32">
				<signature>System.Console.get_WindowLeft():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowTop" uniqueID="get_WindowTop():System.Int32">
				<signature>System.Console.get_WindowTop():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowWidth" uniqueID="get_WindowWidth():System.Int32">
				<signature>System.Console.get_WindowWidth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="remove_CancelKeyPress" uniqueID="remove_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void">
				<signature>System.Console.remove_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_BackgroundColor" uniqueID="set_BackgroundColor(System.ConsoleColor):System.Void">
				<signature>System.Console.set_BackgroundColor(System.ConsoleColor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_BufferHeight" uniqueID="set_BufferHeight(System.Int32):System.Void">
				<signature>System.Console.set_BufferHeight(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_BufferWidth" uniqueID="set_BufferWidth(System.Int32):System.Void">
				<signature>System.Console.set_BufferWidth(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorLeft" uniqueID="set_CursorLeft(System.Int32):System.Void">
				<signature>System.Console.set_CursorLeft(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorSize" uniqueID="set_CursorSize(System.Int32):System.Void">
				<signature>System.Console.set_CursorSize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorTop" uniqueID="set_CursorTop(System.Int32):System.Void">
				<signature>System.Console.set_CursorTop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorVisible" uniqueID="set_CursorVisible(System.Boolean):System.Void">
				<signature>System.Console.set_CursorVisible(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_ForegroundColor" uniqueID="set_ForegroundColor(System.ConsoleColor):System.Void">
				<signature>System.Console.set_ForegroundColor(System.ConsoleColor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_InputEncoding" uniqueID="set_InputEncoding(System.Text.Encoding):System.Void">
				<signature>System.Console.set_InputEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_OutputEncoding" uniqueID="set_OutputEncoding(System.Text.Encoding):System.Void">
				<signature>System.Console.set_OutputEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_Title" uniqueID="set_Title(System.String):System.Void">
				<signature>System.Console.set_Title(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_TreatControlCAsInput" uniqueID="set_TreatControlCAsInput(System.Boolean):System.Void">
				<signature>System.Console.set_TreatControlCAsInput(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowHeight" uniqueID="set_WindowHeight(System.Int32):System.Void">
				<signature>System.Console.set_WindowHeight(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowLeft" uniqueID="set_WindowLeft(System.Int32):System.Void">
				<signature>System.Console.set_WindowLeft(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowTop" uniqueID="set_WindowTop(System.Int32):System.Void">
				<signature>System.Console.set_WindowTop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowWidth" uniqueID="set_WindowWidth(System.Int32):System.Void">
				<signature>System.Console.set_WindowWidth(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="Convert" uniqueID="System.Convert">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Convert.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CalculateOutputLength" uniqueID="CalculateOutputLength(System.Int32;System.Boolean):System.Int32">
				<signature>System.Convert.CalculateOutputLength(System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.Type):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.Type;System.IFormatProvider):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.TypeCode):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.TypeCode):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.TypeCode;System.IFormatProvider):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.TypeCode;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConvertToBase64Array" uniqueID="ConvertToBase64Array(System.Char;System.Byte;System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.Convert.ConvertToBase64Array(System.Char;System.Byte;System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DefaultToType" uniqueID="DefaultToType(System.IConvertible;System.Type;System.IFormatProvider):System.Object">
				<signature>System.Convert.DefaultToType(System.IConvertible;System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromBase64CharArray" uniqueID="FromBase64CharArray(System.Char[];System.Int32;System.Int32):System.Byte[]">
				<signature>System.Convert.FromBase64CharArray(System.Char[];System.Int32;System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromBase64String" uniqueID="FromBase64String(System.String):System.Byte[]">
				<signature>System.Convert.FromBase64String(System.String):System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeCode" uniqueID="GetTypeCode(System.Object):System.TypeCode">
				<signature>System.Convert.GetTypeCode(System.Object):System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDBNull" uniqueID="IsDBNull(System.Object):System.Boolean">
				<signature>System.Convert.IsDBNull(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64CharArray" uniqueID="ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32):System.Int32">
				<signature>System.Convert.ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64CharArray" uniqueID="ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32;System.Base64FormattingOptions):System.Int32">
				<signature>System.Convert.ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32;System.Base64FormattingOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[]):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[];System.Base64FormattingOptions):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[];System.Base64FormattingOptions):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[];System.Int32;System.Int32):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[];System.Int32;System.Int32;System.Base64FormattingOptions):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[];System.Int32;System.Int32;System.Base64FormattingOptions):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Boolean):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Byte):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Char):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.DateTime):System.Boolean">
				<signature>System.Convert.ToBoolean(System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Decimal):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Double):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Double):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Int16):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Int16):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Int32):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Int64):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Object):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Object;System.IFormatProvider):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Object;System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.SByte):System.Boolean">
				<signature>System.Convert.ToBoolean(System.SByte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Single):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Single):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.String):System.Boolean">
				<signature>System.Convert.ToBoolean(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.String;System.IFormatProvider):System.Boolean">
				<signature>System.Convert.ToBoolean(System.String;System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.UInt16):System.Boolean">
				<signature>System.Convert.ToBoolean(System.UInt16):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.UInt32):System.Boolean">
				<signature>System.Convert.ToBoolean(System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.UInt64):System.Boolean">
				<signature>System.Convert.ToBoolean(System.UInt64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Boolean):System.Byte">
				<signature>System.Convert.ToByte(System.Boolean):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Byte):System.Byte">
				<signature>System.Convert.ToByte(System.Byte):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Char):System.Byte">
				<signature>System.Convert.ToByte(System.Char):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.DateTime):System.Byte">
				<signature>System.Convert.ToByte(System.DateTime):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Decimal):System.Byte">
				<signature>System.Convert.ToByte(System.Decimal):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Double):System.Byte">
				<signature>System.Convert.ToByte(System.Double):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Int16):System.Byte">
				<signature>System.Convert.ToByte(System.Int16):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Int32):System.Byte">
				<signature>System.Convert.ToByte(System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Int64):System.Byte">
				<signature>System.Convert.ToByte(System.Int64):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Object):System.Byte">
				<signature>System.Convert.ToByte(System.Object):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Object;System.IFormatProvider):System.Byte">
				<signature>System.Convert.ToByte(System.Object;System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.SByte):System.Byte">
				<signature>System.Convert.ToByte(System.SByte):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Single):System.Byte">
				<signature>System.Convert.ToByte(System.Single):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.String):System.Byte">
				<signature>System.Convert.ToByte(System.String):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.String;System.IFormatProvider):System.Byte">
				<signature>System.Convert.ToByte(System.String;System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.String;System.Int32):System.Byte">
				<signature>System.Convert.ToByte(System.String;System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.UInt16):System.Byte">
				<signature>System.Convert.ToByte(System.UInt16):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.UInt32):System.Byte">
				<signature>System.Convert.ToByte(System.UInt32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.UInt64):System.Byte">
				<signature>System.Convert.ToByte(System.UInt64):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Boolean):System.Char">
				<signature>System.Convert.ToChar(System.Boolean):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Byte):System.Char">
				<signature>System.Convert.ToChar(System.Byte):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Char):System.Char">
				<signature>System.Convert.ToChar(System.Char):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.DateTime):System.Char">
				<signature>System.Convert.ToChar(System.DateTime):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Decimal):System.Char">
				<signature>System.Convert.ToChar(System.Decimal):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Double):System.Char">
				<signature>System.Convert.ToChar(System.Double):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Int16):System.Char">
				<signature>System.Convert.ToChar(System.Int16):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Int32):System.Char">
				<signature>System.Convert.ToChar(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Int64):System.Char">
				<signature>System.Convert.ToChar(System.Int64):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Object):System.Char">
				<signature>System.Convert.ToChar(System.Object):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Object;System.IFormatProvider):System.Char">
				<signature>System.Convert.ToChar(System.Object;System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.SByte):System.Char">
				<signature>System.Convert.ToChar(System.SByte):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Single):System.Char">
				<signature>System.Convert.ToChar(System.Single):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.String):System.Char">
				<signature>System.Convert.ToChar(System.String):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.String;System.IFormatProvider):System.Char">
				<signature>System.Convert.ToChar(System.String;System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.UInt16):System.Char">
				<signature>System.Convert.ToChar(System.UInt16):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.UInt32):System.Char">
				<signature>System.Convert.ToChar(System.UInt32):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.UInt64):System.Char">
				<signature>System.Convert.ToChar(System.UInt64):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Boolean):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Boolean):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Byte):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Byte):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Char):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Char):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.DateTime):System.DateTime">
				<signature>System.Convert.ToDateTime(System.DateTime):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Decimal):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Decimal):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Double):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Int16):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Int16):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Int32):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Int64):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Int64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Object):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Object):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Object;System.IFormatProvider):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Object;System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.SByte):System.DateTime">
				<signature>System.Convert.ToDateTime(System.SByte):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Single):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Single):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.String):System.DateTime">
				<signature>System.Convert.ToDateTime(System.String):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.String;System.IFormatProvider):System.DateTime">
				<signature>System.Convert.ToDateTime(System.String;System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.UInt16):System.DateTime">
				<signature>System.Convert.ToDateTime(System.UInt16):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.UInt32):System.DateTime">
				<signature>System.Convert.ToDateTime(System.UInt32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.UInt64):System.DateTime">
				<signature>System.Convert.ToDateTime(System.UInt64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Boolean):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Boolean):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Byte):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Byte):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Char):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Char):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.DateTime):System.Decimal">
				<signature>System.Convert.ToDecimal(System.DateTime):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Decimal):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Double):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Double):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Int16):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Int16):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Int32):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Int32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Int64):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Int64):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Object):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Object):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Object;System.IFormatProvider):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Object;System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.SByte):System.Decimal">
				<signature>System.Convert.ToDecimal(System.SByte):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Single):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Single):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.String):System.Decimal">
				<signature>System.Convert.ToDecimal(System.String):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.String;System.IFormatProvider):System.Decimal">
				<signature>System.Convert.ToDecimal(System.String;System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.UInt16):System.Decimal">
				<signature>System.Convert.ToDecimal(System.UInt16):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.UInt32):System.Decimal">
				<signature>System.Convert.ToDecimal(System.UInt32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.UInt64):System.Decimal">
				<signature>System.Convert.ToDecimal(System.UInt64):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Boolean):System.Double">
				<signature>System.Convert.ToDouble(System.Boolean):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Byte):System.Double">
				<signature>System.Convert.ToDouble(System.Byte):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Char):System.Double">
				<signature>System.Convert.ToDouble(System.Char):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.DateTime):System.Double">
				<signature>System.Convert.ToDouble(System.DateTime):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Decimal):System.Double">
				<signature>System.Convert.ToDouble(System.Decimal):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Double):System.Double">
				<signature>System.Convert.ToDouble(System.Double):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Int16):System.Double">
				<signature>System.Convert.ToDouble(System.Int16):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Int32):System.Double">
				<signature>System.Convert.ToDouble(System.Int32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Int64):System.Double">
				<signature>System.Convert.ToDouble(System.Int64):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Object):System.Double">
				<signature>System.Convert.ToDouble(System.Object):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Object;System.IFormatProvider):System.Double">
				<signature>System.Convert.ToDouble(System.Object;System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.SByte):System.Double">
				<signature>System.Convert.ToDouble(System.SByte):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Single):System.Double">
				<signature>System.Convert.ToDouble(System.Single):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.String):System.Double">
				<signature>System.Convert.ToDouble(System.String):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.String;System.IFormatProvider):System.Double">
				<signature>System.Convert.ToDouble(System.String;System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.UInt16):System.Double">
				<signature>System.Convert.ToDouble(System.UInt16):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.UInt32):System.Double">
				<signature>System.Convert.ToDouble(System.UInt32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.UInt64):System.Double">
				<signature>System.Convert.ToDouble(System.UInt64):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Boolean):System.Int16">
				<signature>System.Convert.ToInt16(System.Boolean):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Byte):System.Int16">
				<signature>System.Convert.ToInt16(System.Byte):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Char):System.Int16">
				<signature>System.Convert.ToInt16(System.Char):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.DateTime):System.Int16">
				<signature>System.Convert.ToInt16(System.DateTime):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Decimal):System.Int16">
				<signature>System.Convert.ToInt16(System.Decimal):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Double):System.Int16">
				<signature>System.Convert.ToInt16(System.Double):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Int16):System.Int16">
				<signature>System.Convert.ToInt16(System.Int16):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Int32):System.Int16">
				<signature>System.Convert.ToInt16(System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Int64):System.Int16">
				<signature>System.Convert.ToInt16(System.Int64):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Object):System.Int16">
				<signature>System.Convert.ToInt16(System.Object):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Object;System.IFormatProvider):System.Int16">
				<signature>System.Convert.ToInt16(System.Object;System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.SByte):System.Int16">
				<signature>System.Convert.ToInt16(System.SByte):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Single):System.Int16">
				<signature>System.Convert.ToInt16(System.Single):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.String):System.Int16">
				<signature>System.Convert.ToInt16(System.String):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.String;System.IFormatProvider):System.Int16">
				<signature>System.Convert.ToInt16(System.String;System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.String;System.Int32):System.Int16">
				<signature>System.Convert.ToInt16(System.String;System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.UInt16):System.Int16">
				<signature>System.Convert.ToInt16(System.UInt16):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.UInt32):System.Int16">
				<signature>System.Convert.ToInt16(System.UInt32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.UInt64):System.Int16">
				<signature>System.Convert.ToInt16(System.UInt64):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Boolean):System.Int32">
				<signature>System.Convert.ToInt32(System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Byte):System.Int32">
				<signature>System.Convert.ToInt32(System.Byte):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Char):System.Int32">
				<signature>System.Convert.ToInt32(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.DateTime):System.Int32">
				<signature>System.Convert.ToInt32(System.DateTime):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Decimal):System.Int32">
				<signature>System.Convert.ToInt32(System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Double):System.Int32">
				<signature>System.Convert.ToInt32(System.Double):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Int16):System.Int32">
				<signature>System.Convert.ToInt32(System.Int16):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Int32):System.Int32">
				<signature>System.Convert.ToInt32(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Int64):System.Int32">
				<signature>System.Convert.ToInt32(System.Int64):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Object):System.Int32">
				<signature>System.Convert.ToInt32(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Object;System.IFormatProvider):System.Int32">
				<signature>System.Convert.ToInt32(System.Object;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.SByte):System.Int32">
				<signature>System.Convert.ToInt32(System.SByte):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Single):System.Int32">
				<signature>System.Convert.ToInt32(System.Single):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.String):System.Int32">
				<signature>System.Convert.ToInt32(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.String;System.IFormatProvider):System.Int32">
				<signature>System.Convert.ToInt32(System.String;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.String;System.Int32):System.Int32">
				<signature>System.Convert.ToInt32(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.UInt16):System.Int32">
				<signature>System.Convert.ToInt32(System.UInt16):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.UInt32):System.Int32">
				<signature>System.Convert.ToInt32(System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.UInt64):System.Int32">
				<signature>System.Convert.ToInt32(System.UInt64):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Boolean):System.Int64">
				<signature>System.Convert.ToInt64(System.Boolean):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Byte):System.Int64">
				<signature>System.Convert.ToInt64(System.Byte):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Char):System.Int64">
				<signature>System.Convert.ToInt64(System.Char):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.DateTime):System.Int64">
				<signature>System.Convert.ToInt64(System.DateTime):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Decimal):System.Int64">
				<signature>System.Convert.ToInt64(System.Decimal):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Double):System.Int64">
				<signature>System.Convert.ToInt64(System.Double):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Int16):System.Int64">
				<signature>System.Convert.ToInt64(System.Int16):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Int32):System.Int64">
				<signature>System.Convert.ToInt64(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Int64):System.Int64">
				<signature>System.Convert.ToInt64(System.Int64):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Object):System.Int64">
				<signature>System.Convert.ToInt64(System.Object):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Object;System.IFormatProvider):System.Int64">
				<signature>System.Convert.ToInt64(System.Object;System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.SByte):System.Int64">
				<signature>System.Convert.ToInt64(System.SByte):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Single):System.Int64">
				<signature>System.Convert.ToInt64(System.Single):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.String):System.Int64">
				<signature>System.Convert.ToInt64(System.String):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.String;System.IFormatProvider):System.Int64">
				<signature>System.Convert.ToInt64(System.String;System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.String;System.Int32):System.Int64">
				<signature>System.Convert.ToInt64(System.String;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.UInt16):System.Int64">
				<signature>System.Convert.ToInt64(System.UInt16):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.UInt32):System.Int64">
				<signature>System.Convert.ToInt64(System.UInt32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.UInt64):System.Int64">
				<signature>System.Convert.ToInt64(System.UInt64):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Boolean):System.SByte">
				<signature>System.Convert.ToSByte(System.Boolean):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Byte):System.SByte">
				<signature>System.Convert.ToSByte(System.Byte):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Char):System.SByte">
				<signature>System.Convert.ToSByte(System.Char):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.DateTime):System.SByte">
				<signature>System.Convert.ToSByte(System.DateTime):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Decimal):System.SByte">
				<signature>System.Convert.ToSByte(System.Decimal):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Double):System.SByte">
				<signature>System.Convert.ToSByte(System.Double):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Int16):System.SByte">
				<signature>System.Convert.ToSByte(System.Int16):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Int32):System.SByte">
				<signature>System.Convert.ToSByte(System.Int32):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Int64):System.SByte">
				<signature>System.Convert.ToSByte(System.Int64):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Object):System.SByte">
				<signature>System.Convert.ToSByte(System.Object):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Object;System.IFormatProvider):System.SByte">
				<signature>System.Convert.ToSByte(System.Object;System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.SByte):System.SByte">
				<signature>System.Convert.ToSByte(System.SByte):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Single):System.SByte">
				<signature>System.Convert.ToSByte(System.Single):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.String):System.SByte">
				<signature>System.Convert.ToSByte(System.String):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.String;System.IFormatProvider):System.SByte">
				<signature>System.Convert.ToSByte(System.String;System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.String;System.Int32):System.SByte">
				<signature>System.Convert.ToSByte(System.String;System.Int32):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.UInt16):System.SByte">
				<signature>System.Convert.ToSByte(System.UInt16):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.UInt32):System.SByte">
				<signature>System.Convert.ToSByte(System.UInt32):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.UInt64):System.SByte">
				<signature>System.Convert.ToSByte(System.UInt64):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Boolean):System.Single">
				<signature>System.Convert.ToSingle(System.Boolean):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Byte):System.Single">
				<signature>System.Convert.ToSingle(System.Byte):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Char):System.Single">
				<signature>System.Convert.ToSingle(System.Char):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.DateTime):System.Single">
				<signature>System.Convert.ToSingle(System.DateTime):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Decimal):System.Single">
				<signature>System.Convert.ToSingle(System.Decimal):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Double):System.Single">
				<signature>System.Convert.ToSingle(System.Double):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Int16):System.Single">
				<signature>System.Convert.ToSingle(System.Int16):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Int32):System.Single">
				<signature>System.Convert.ToSingle(System.Int32):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Int64):System.Single">
				<signature>System.Convert.ToSingle(System.Int64):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Object):System.Single">
				<signature>System.Convert.ToSingle(System.Object):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Object;System.IFormatProvider):System.Single">
				<signature>System.Convert.ToSingle(System.Object;System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.SByte):System.Single">
				<signature>System.Convert.ToSingle(System.SByte):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Single):System.Single">
				<signature>System.Convert.ToSingle(System.Single):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.String):System.Single">
				<signature>System.Convert.ToSingle(System.String):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.String;System.IFormatProvider):System.Single">
				<signature>System.Convert.ToSingle(System.String;System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.UInt16):System.Single">
				<signature>System.Convert.ToSingle(System.UInt16):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.UInt32):System.Single">
				<signature>System.Convert.ToSingle(System.UInt32):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.UInt64):System.Single">
				<signature>System.Convert.ToSingle(System.UInt64):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Boolean):System.String">
				<signature>System.Convert.ToString(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Boolean;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Boolean;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Byte):System.String">
				<signature>System.Convert.ToString(System.Byte):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Byte;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Byte;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Byte;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Byte;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Char):System.String">
				<signature>System.Convert.ToString(System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Char;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Char;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.DateTime):System.String">
				<signature>System.Convert.ToString(System.DateTime):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.DateTime;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.DateTime;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Decimal):System.String">
				<signature>System.Convert.ToString(System.Decimal):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Decimal;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Decimal;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Double):System.String">
				<signature>System.Convert.ToString(System.Double):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Double;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Double;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int16):System.String">
				<signature>System.Convert.ToString(System.Int16):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int16;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Int16;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int16;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int16;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int32;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Int32;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int32;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int64):System.String">
				<signature>System.Convert.ToString(System.Int64):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int64;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Int64;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int64;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int64;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Object):System.String">
				<signature>System.Convert.ToString(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Object;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Object;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.SByte):System.String">
				<signature>System.Convert.ToString(System.SByte):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.SByte;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.SByte;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Single):System.String">
				<signature>System.Convert.ToString(System.Single):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Single;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Single;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Convert.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt16):System.String">
				<signature>System.Convert.ToString(System.UInt16):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt16;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.UInt16;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt32):System.String">
				<signature>System.Convert.ToString(System.UInt32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt32;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.UInt32;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt64):System.String">
				<signature>System.Convert.ToString(System.UInt64):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt64;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.UInt64;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Boolean):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Boolean):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Byte):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Byte):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Char):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Char):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.DateTime):System.UInt16">
				<signature>System.Convert.ToUInt16(System.DateTime):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Decimal):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Decimal):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Double):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Double):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Int16):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Int16):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Int32):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Int32):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Int64):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Int64):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Object):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Object):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Object;System.IFormatProvider):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Object;System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.SByte):System.UInt16">
				<signature>System.Convert.ToUInt16(System.SByte):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Single):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Single):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.String):System.UInt16">
				<signature>System.Convert.ToUInt16(System.String):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.String;System.IFormatProvider):System.UInt16">
				<signature>System.Convert.ToUInt16(System.String;System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.String;System.Int32):System.UInt16">
				<signature>System.Convert.ToUInt16(System.String;System.Int32):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.UInt16):System.UInt16">
				<signature>System.Convert.ToUInt16(System.UInt16):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.UInt32):System.UInt16">
				<signature>System.Convert.ToUInt16(System.UInt32):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.UInt64):System.UInt16">
				<signature>System.Convert.ToUInt16(System.UInt64):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Boolean):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Boolean):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Byte):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Byte):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Char):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Char):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.DateTime):System.UInt32">
				<signature>System.Convert.ToUInt32(System.DateTime):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Decimal):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Decimal):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Double):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Double):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Int16):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Int16):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Int32):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Int32):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Int64):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Int64):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Object):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Object):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Object;System.IFormatProvider):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Object;System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.SByte):System.UInt32">
				<signature>System.Convert.ToUInt32(System.SByte):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Single):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Single):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.String):System.UInt32">
				<signature>System.Convert.ToUInt32(System.String):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.String;System.IFormatProvider):System.UInt32">
				<signature>System.Convert.ToUInt32(System.String;System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.String;System.Int32):System.UInt32">
				<signature>System.Convert.ToUInt32(System.String;System.Int32):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.UInt16):System.UInt32">
				<signature>System.Convert.ToUInt32(System.UInt16):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.UInt32):System.UInt32">
				<signature>System.Convert.ToUInt32(System.UInt32):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.UInt64):System.UInt32">
				<signature>System.Convert.ToUInt32(System.UInt64):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Boolean):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Boolean):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Byte):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Byte):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Char):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Char):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.DateTime):System.UInt64">
				<signature>System.Convert.ToUInt64(System.DateTime):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Decimal):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Decimal):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Double):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Double):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Int16):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Int16):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Int32):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Int32):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Int64):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Int64):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Object):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Object):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Object;System.IFormatProvider):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Object;System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.SByte):System.UInt64">
				<signature>System.Convert.ToUInt64(System.SByte):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Single):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Single):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.String):System.UInt64">
				<signature>System.Convert.ToUInt64(System.String):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.String;System.IFormatProvider):System.UInt64">
				<signature>System.Convert.ToUInt64(System.String;System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.String;System.Int32):System.UInt64">
				<signature>System.Convert.ToUInt64(System.String;System.Int32):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.UInt16):System.UInt64">
				<signature>System.Convert.ToUInt64(System.UInt16):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.UInt32):System.UInt64">
				<signature>System.Convert.ToUInt64(System.UInt32):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.UInt64):System.UInt64">
				<signature>System.Convert.ToUInt64(System.UInt64):System.UInt64</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.String&gt;" uniqueID="System.IEquatable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String):System.Boolean">
				<signature>System.IEquatable&lt;System.String&gt;.Equals(System.String):System.Boolean</signature>
			</method>
		</class>
		<class name="Enum+HashEntry" uniqueID="System.Enum+HashEntry">
			<method accessibility="Public" methodKind="Member" name="Enum+HashEntry" uniqueID="Enum+HashEntry(System.String[];System.UInt64[]):System.Void">
				<signature>System.Enum+HashEntry.Enum+HashEntry(System.String[];System.UInt64[]):System.Void</signature>
			</method>
		</class>
		<class name="Exception" uniqueID="System.Exception">
			<method accessibility="Protected" methodKind="Static" name="GetMessageFromNativeResources" uniqueID="GetMessageFromNativeResources(System.Exception+ExceptionMessageKind):System.String">
				<signature>System.Exception.GetMessageFromNativeResources(System.Exception+ExceptionMessageKind):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetMethod" uniqueID="InternalGetMethod(System.Object):System.RuntimeMethodHandle">
				<signature>System.Exception.InternalGetMethod(System.Object):System.RuntimeMethodHandle</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsImmutableAgileException" uniqueID="IsImmutableAgileException(System.Exception):System.Boolean">
				<signature>System.Exception.IsImmutableAgileException(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="_InternalGetMethod" uniqueID="_InternalGetMethod(System.Object):System.Void">
				<signature>System.Exception._InternalGetMethod(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nIsTransient" uniqueID="nIsTransient(System.Int32):System.Boolean">
				<signature>System.Exception.nIsTransient(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception():System.Void">
				<signature>System.Exception.Exception():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Exception" uniqueID="Exception(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.Exception(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception(System.String):System.Void">
				<signature>System.Exception.Exception(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception(System.String;System.Exception):System.Void">
				<signature>System.Exception.Exception(System.String;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseException" uniqueID="GetBaseException():System.Exception">
				<signature>System.Exception.GetBaseException():System.Exception</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetClassName" uniqueID="GetClassName():System.String">
				<signature>System.Exception.GetClassName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDataInternal" uniqueID="GetDataInternal():System.Collections.IDictionary">
				<signature>System.Exception.GetDataInternal():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodFromString" uniqueID="GetExceptionMethodFromString():System.Reflection.MethodBase">
				<signature>System.Exception.GetExceptionMethodFromString():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodString" uniqueID="GetExceptionMethodString():System.String">
				<signature>System.Exception.GetExceptionMethodString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetTargetSiteInternal" uniqueID="GetTargetSiteInternal():System.Reflection.MethodBase">
				<signature>System.Exception.GetTargetSiteInternal():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Exception.GetType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalPreserveStackTrace" uniqueID="InternalPreserveStackTrace():System.Void">
				<signature>System.Exception.InternalPreserveStackTrace():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalToString" uniqueID="InternalToString():System.String">
				<signature>System.Exception.InternalToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PrepForRemoting" uniqueID="PrepForRemoting():System.Exception">
				<signature>System.Exception.PrepForRemoting():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetErrorCode" uniqueID="SetErrorCode(System.Int32):System.Void">
				<signature>System.Exception.SetErrorCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Exception.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Data" uniqueID="get_Data():System.Collections.IDictionary">
				<signature>System.Exception.get_Data():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HResult" uniqueID="get_HResult():System.Int32">
				<signature>System.Exception.get_HResult():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpLink" uniqueID="get_HelpLink():System.String">
				<signature>System.Exception.get_HelpLink():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InnerException" uniqueID="get_InnerException():System.Exception">
				<signature>System.Exception.get_InnerException():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsTransient" uniqueID="get_IsTransient():System.Boolean">
				<signature>System.Exception.get_IsTransient():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Message" uniqueID="get_Message():System.String">
				<signature>System.Exception.get_Message():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Source" uniqueID="get_Source():System.String">
				<signature>System.Exception.get_Source():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StackTrace" uniqueID="get_StackTrace():System.String">
				<signature>System.Exception.get_StackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TargetSite" uniqueID="get_TargetSite():System.Reflection.MethodBase">
				<signature>System.Exception.get_TargetSite():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HResult" uniqueID="set_HResult(System.Int32):System.Void">
				<signature>System.Exception.set_HResult(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpLink" uniqueID="set_HelpLink(System.String):System.Void">
				<signature>System.Exception.set_HelpLink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Source" uniqueID="set_Source(System.String):System.Void">
				<signature>System.Exception.set_Source(System.String):System.Void</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.String&gt;" uniqueID="System.IComparable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.String):System.Int32">
				<signature>System.IComparable&lt;System.String&gt;.CompareTo(System.String):System.Int32</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.Int32&gt;" uniqueID="System.IEquatable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Int32):System.Boolean">
				<signature>System.IEquatable&lt;System.Int32&gt;.Equals(System.Int32):System.Boolean</signature>
			</method>
		</class>
		<class name="MarshalByRefObject" uniqueID="System.MarshalByRefObject">
			<method accessibility="Protected" methodKind="Static" name="CanCastToXmlTypeHelper" uniqueID="CanCastToXmlTypeHelper(System.Type;System.MarshalByRefObject):System.Boolean">
				<signature>System.MarshalByRefObject.CanCastToXmlTypeHelper(System.Type;System.MarshalByRefObject):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetComIUnknown" uniqueID="GetComIUnknown(System.MarshalByRefObject):System.IntPtr">
				<signature>System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetIdentity" uniqueID="GetIdentity(System.MarshalByRefObject):System.Runtime.Remoting.Identity">
				<signature>System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject):System.Runtime.Remoting.Identity</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetIdentity" uniqueID="GetIdentity(System.MarshalByRefObject;System.Boolean):System.Runtime.Remoting.Identity">
				<signature>System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject;System.Boolean):System.Runtime.Remoting.Identity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CanCastToXmlType" uniqueID="CanCastToXmlType(System.String;System.String):System.Boolean">
				<signature>System.MarshalByRefObject.CanCastToXmlType(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateObjRef" uniqueID="CreateObjRef(System.Type):System.Runtime.Remoting.ObjRef">
				<signature>System.MarshalByRefObject.CreateObjRef(System.Type):System.Runtime.Remoting.ObjRef</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetComIUnknown" uniqueID="GetComIUnknown(System.Boolean):System.IntPtr">
				<signature>System.MarshalByRefObject.GetComIUnknown(System.Boolean):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLifetimeService" uniqueID="GetLifetimeService():System.Object">
				<signature>System.MarshalByRefObject.GetLifetimeService():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InitializeLifetimeService" uniqueID="InitializeLifetimeService():System.Object">
				<signature>System.MarshalByRefObject.InitializeLifetimeService():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.MarshalByRefObject.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Type):System.Boolean">
				<signature>System.MarshalByRefObject.IsInstanceOfType(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MarshalByRefObject" uniqueID="MarshalByRefObject():System.Void">
				<signature>System.MarshalByRefObject.MarshalByRefObject():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberwiseClone" uniqueID="MemberwiseClone(System.Boolean):System.MarshalByRefObject">
				<signature>System.MarshalByRefObject.MemberwiseClone(System.Boolean):System.MarshalByRefObject</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="__RaceSetServerIdentity" uniqueID="__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity):System.Runtime.Remoting.ServerIdentity">
				<signature>System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity):System.Runtime.Remoting.ServerIdentity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="__ResetServerIdentity" uniqueID="__ResetServerIdentity():System.Void">
				<signature>System.MarshalByRefObject.__ResetServerIdentity():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Identity" uniqueID="get_Identity():System.Object">
				<signature>System.MarshalByRefObject.get_Identity():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_Identity" uniqueID="set_Identity(System.Object):System.Void">
				<signature>System.MarshalByRefObject.set_Identity(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Int32" uniqueID="System.Int32">
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.Int32">
				<signature>System.Int32.Parse(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles):System.Int32">
				<signature>System.Int32.Parse(System.String;System.Globalization.NumberStyles):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Int32">
				<signature>System.Int32.Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.IFormatProvider):System.Int32">
				<signature>System.Int32.Parse(System.String;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Int32):System.Boolean">
				<signature>System.Int32.TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Int32):System.Boolean">
				<signature>System.Int32.TryParse(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Int32):System.Int32">
				<signature>System.Int32.CompareTo(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Int32.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Int32):System.Boolean">
				<signature>System.Int32.Equals(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Int32.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Int32.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Int32.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Int32.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Int32.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Int32.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Int32.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Int32.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Int32.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Int32.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Int32.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Int32.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Int32.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Int32.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Int32.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Int32.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Int32.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Int32.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Int32.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Int32.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Int32.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Int32.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.String&gt;" uniqueID="System.Predicate&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.String;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.String&gt;.BeginInvoke(System.String;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.String&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.String):System.Boolean">
				<signature>System.Predicate&lt;System.String&gt;.Invoke(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.String&gt;" uniqueID="Predicate&lt;System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.String&gt;.Predicate&lt;System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="String" uniqueID="System.String">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.String.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean;System.Globalization.CultureInfo):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean;System.Globalization.CultureInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String):System.Int32">
				<signature>System.String.Compare(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Boolean):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.StringComparison):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CompareOrdinal" uniqueID="CompareOrdinal(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.CompareOrdinal(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CompareOrdinal" uniqueID="CompareOrdinal(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinal(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompareOrdinalHelper" uniqueID="CompareOrdinalHelper(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinalHelper(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object):System.String">
				<signature>System.String.Concat(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object;System.Object):System.String">
				<signature>System.String.Concat(System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object;System.Object;System.Object):System.String">
				<signature>System.String.Concat(System.Object;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object[]):System.String">
				<signature>System.String.Concat(System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String;System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String[]):System.String">
				<signature>System.String.Concat(System.String[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConcatArray" uniqueID="ConcatArray(System.String[];System.Int32):System.String">
				<signature>System.String.ConcatArray(System.String[];System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.String):System.String">
				<signature>System.String.Copy(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateString" uniqueID="CreateString(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.String">
				<signature>System.String.CreateString(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateStringFromEncoding" uniqueID="CreateStringFromEncoding(System.Byte;System.Int32;System.Text.Encoding):System.String">
				<signature>System.String.CreateStringFromEncoding(System.Byte;System.Int32;System.Text.Encoding):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.String;System.String):System.Boolean">
				<signature>System.String.Equals(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.String;System.String;System.StringComparison):System.Boolean">
				<signature>System.String.Equals(System.String;System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="EqualsHelper" uniqueID="EqualsHelper(System.String;System.String):System.Boolean">
				<signature>System.String.EqualsHelper(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FastAllocateString" uniqueID="FastAllocateString(System.Int32):System.String">
				<signature>System.String.FastAllocateString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FillStringChecked" uniqueID="FillStringChecked(System.String;System.Int32;System.String):System.Void">
				<signature>System.String.FillStringChecked(System.String;System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.IFormatProvider;System.String;System.Object[]):System.String">
				<signature>System.String.Format(System.IFormatProvider;System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object;System.Object;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object[]):System.String">
				<signature>System.String.Format(System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetStringForStringBuilder" uniqueID="GetStringForStringBuilder(System.String;System.Int32):System.String">
				<signature>System.String.GetStringForStringBuilder(System.String;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetStringForStringBuilder" uniqueID="GetStringForStringBuilder(System.String;System.Int32;System.Int32;System.Int32):System.String">
				<signature>System.String.GetStringForStringBuilder(System.String;System.Int32;System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Intern" uniqueID="Intern(System.String):System.String">
				<signature>System.String.Intern(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalCopy" uniqueID="InternalCopy(System.String):System.String">
				<signature>System.String.InternalCopy(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalCopy" uniqueID="InternalCopy(System.String;System.IntPtr;System.Int32):System.Void">
				<signature>System.String.InternalCopy(System.String;System.IntPtr;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalMemCpy" uniqueID="InternalMemCpy(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Void">
				<signature>System.String.InternalMemCpy(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsInterned" uniqueID="IsInterned(System.String):System.String">
				<signature>System.String.IsInterned(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsNullOrEmpty" uniqueID="IsNullOrEmpty(System.String):System.Boolean">
				<signature>System.String.IsNullOrEmpty(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.String[]):System.String">
				<signature>System.String.Join(System.String;System.String[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.String[];System.Int32;System.Int32):System.String">
				<signature>System.String.Join(System.String;System.String[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SmallCharToUpper" uniqueID="SmallCharToUpper(System.String):System.String">
				<signature>System.String.SmallCharToUpper(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeCompareOrdinal" uniqueID="nativeCompareOrdinal(System.String;System.String;System.Boolean):System.Int32">
				<signature>System.String.nativeCompareOrdinal(System.String;System.String;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeCompareOrdinalEx" uniqueID="nativeCompareOrdinalEx(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.nativeCompareOrdinalEx(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeCompareOrdinalWC" uniqueID="nativeCompareOrdinalWC(System.String;System.Char;System.Boolean;System.Boolean):System.Int32">
				<signature>System.String.nativeCompareOrdinalWC(System.String;System.Char;System.Boolean;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.String;System.String):System.Boolean">
				<signature>System.String.op_Equality(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.String;System.String):System.Boolean">
				<signature>System.String.op_Inequality(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="revmemcpyimpl" uniqueID="revmemcpyimpl(System.Byte;System.Byte;System.Int32):System.Void">
				<signature>System.String.revmemcpyimpl(System.Byte;System.Byte;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="wcslen" uniqueID="wcslen(System.Char):System.Int32">
				<signature>System.String.wcslen(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="wstrcpy" uniqueID="wstrcpy(System.Char;System.Char;System.Int32):System.Void">
				<signature>System.String.wstrcpy(System.Char;System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="wstrcpyPtrAligned" uniqueID="wstrcpyPtrAligned(System.Char;System.Char;System.Int32):System.Void">
				<signature>System.String.wstrcpyPtrAligned(System.Char;System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendInPlace" uniqueID="AppendInPlace(System.Char;System.Int32):System.Void">
				<signature>System.String.AppendInPlace(System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendInPlace" uniqueID="AppendInPlace(System.Char;System.Int32;System.Int32):System.Void">
				<signature>System.String.AppendInPlace(System.Char;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendInPlace" uniqueID="AppendInPlace(System.Char[];System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.String.AppendInPlace(System.Char[];System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendInPlace" uniqueID="AppendInPlace(System.String;System.Int32):System.Void">
				<signature>System.String.AppendInPlace(System.String;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendInPlace" uniqueID="AppendInPlace(System.String;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.String.AppendInPlace(System.String;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearPostNullChar" uniqueID="ClearPostNullChar():System.Void">
				<signature>System.String.ClearPostNullChar():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.String.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.String.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.String):System.Int32">
				<signature>System.String.CompareTo(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.String.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertToAnsi_BestFit_Throw" uniqueID="ConvertToAnsi_BestFit_Throw(System.Int32):System.Byte[]">
				<signature>System.String.ConvertToAnsi_BestFit_Throw(System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.String.CopyTo(System.Int32;System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharArray" uniqueID="CtorCharArray(System.Char[]):System.String">
				<signature>System.String.CtorCharArray(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharArrayStartLength" uniqueID="CtorCharArrayStartLength(System.Char[];System.Int32;System.Int32):System.String">
				<signature>System.String.CtorCharArrayStartLength(System.Char[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharCount" uniqueID="CtorCharCount(System.Char;System.Int32):System.String">
				<signature>System.String.CtorCharCount(System.Char;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharPtr" uniqueID="CtorCharPtr(System.Char):System.String">
				<signature>System.String.CtorCharPtr(System.Char):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharPtrStartLength" uniqueID="CtorCharPtrStartLength(System.Char;System.Int32;System.Int32):System.String">
				<signature>System.String.CtorCharPtrStartLength(System.Char;System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.Char):System.Boolean">
				<signature>System.String.EndsWith(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String):System.Boolean">
				<signature>System.String.EndsWith(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean">
				<signature>System.String.EndsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.EndsWith(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.String.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String):System.Boolean">
				<signature>System.String.Equals(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.Equals(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.CharEnumerator">
				<signature>System.String.GetEnumerator():System.CharEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.String.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.String.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char):System.Int32">
				<signature>System.String.IndexOf(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char;System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.Char;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.String.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[]):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[];System.Int32):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.String):System.String">
				<signature>System.String.Insert(System.Int32;System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertInPlace" uniqueID="InsertInPlace(System.Int32;System.Char[];System.Int32;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.String.InsertInPlace(System.Int32;System.Char[];System.Int32;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertInPlace" uniqueID="InsertInPlace(System.Int32;System.String;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.String.InsertInPlace(System.Int32;System.String;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalSetCharNoBoundsCheck" uniqueID="InternalSetCharNoBoundsCheck(System.Int32;System.Char):System.Void">
				<signature>System.String.InternalSetCharNoBoundsCheck(System.Int32;System.Char):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSplitKeepEmptyEntries" uniqueID="InternalSplitKeepEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]">
				<signature>System.String.InternalSplitKeepEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSplitOmitEmptyEntries" uniqueID="InternalSplitOmitEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]">
				<signature>System.String.InternalSplitOmitEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSubString" uniqueID="InternalSubString(System.Int32;System.Int32;System.Boolean):System.String">
				<signature>System.String.InternalSubString(System.Int32;System.Int32;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalSubStringWithChecks" uniqueID="InternalSubStringWithChecks(System.Int32;System.Int32;System.Boolean):System.String">
				<signature>System.String.InternalSubStringWithChecks(System.Int32;System.Int32;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsAscii" uniqueID="IsAscii():System.Boolean">
				<signature>System.String.IsAscii():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsFastSort" uniqueID="IsFastSort():System.Boolean">
				<signature>System.String.IsFastSort():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNormalized" uniqueID="IsNormalized():System.Boolean">
				<signature>System.String.IsNormalized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNormalized" uniqueID="IsNormalized(System.Text.NormalizationForm):System.Boolean">
				<signature>System.String.IsNormalized(System.Text.NormalizationForm):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char):System.Int32">
				<signature>System.String.LastIndexOf(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char;System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.Char;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String):System.Int32">
				<signature>System.String.LastIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[]):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[];System.Int32):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeSeparatorList" uniqueID="MakeSeparatorList(System.Char[];System.Int32[]):System.Int32">
				<signature>System.String.MakeSeparatorList(System.Char[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeSeparatorList" uniqueID="MakeSeparatorList(System.String[];System.Int32[];System.Int32[]):System.Int32">
				<signature>System.String.MakeSeparatorList(System.String[];System.Int32[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Normalize" uniqueID="Normalize():System.String">
				<signature>System.String.Normalize():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Normalize" uniqueID="Normalize(System.Text.NormalizationForm):System.String">
				<signature>System.String.Normalize(System.Text.NormalizationForm):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NullTerminate" uniqueID="NullTerminate():System.Void">
				<signature>System.String.NullTerminate():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PadHelper" uniqueID="PadHelper(System.Int32;System.Char;System.Boolean):System.String">
				<signature>System.String.PadHelper(System.Int32;System.Char;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadLeft" uniqueID="PadLeft(System.Int32):System.String">
				<signature>System.String.PadLeft(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadLeft" uniqueID="PadLeft(System.Int32;System.Char):System.String">
				<signature>System.String.PadLeft(System.Int32;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadRight" uniqueID="PadRight(System.Int32):System.String">
				<signature>System.String.PadRight(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadRight" uniqueID="PadRight(System.Int32;System.Char):System.String">
				<signature>System.String.PadRight(System.Int32;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Int32):System.String">
				<signature>System.String.Remove(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Int32;System.Int32):System.String">
				<signature>System.String.Remove(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveInPlace" uniqueID="RemoveInPlace(System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.String.RemoveInPlace(System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Replace" uniqueID="Replace(System.Char;System.Char):System.String">
				<signature>System.String.Replace(System.Char;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Replace" uniqueID="Replace(System.String;System.String):System.String">
				<signature>System.String.Replace(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReplaceCharInPlace" uniqueID="ReplaceCharInPlace(System.Char;System.Char;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.String.ReplaceCharInPlace(System.Char;System.Char;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetChar" uniqueID="SetChar(System.Int32;System.Char):System.Void">
				<signature>System.String.SetChar(System.Int32;System.Char):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetLength" uniqueID="SetLength(System.Int32):System.Void">
				<signature>System.String.SetLength(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[]):System.String[]">
				<signature>System.String.Split(System.Char[]):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.Int32):System.String[]">
				<signature>System.String.Split(System.Char[];System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.Char[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.Char[];System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.String[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.String[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.String[];System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.String[];System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String):System.Boolean">
				<signature>System.String.StartsWith(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean">
				<signature>System.String.StartsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.StartsWith(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char):System.Void">
				<signature>System.String.String(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char;System.Int32):System.Void">
				<signature>System.String.String(System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char;System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.Char;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char[]):System.Void">
				<signature>System.String.String(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte):System.Void">
				<signature>System.String.String(System.SByte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte;System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.SByte;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.Void">
				<signature>System.String.String(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Substring" uniqueID="Substring(System.Int32):System.String">
				<signature>System.String.Substring(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Substring" uniqueID="Substring(System.Int32;System.Int32):System.String">
				<signature>System.String.Substring(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
				<signature>System.String.System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.String.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.String.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.String.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.String.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.String.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.String.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.String.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.String.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.String.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.String.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.String.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.String.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.String.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.String.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.String.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.String.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToCharArray" uniqueID="ToCharArray():System.Char[]">
				<signature>System.String.ToCharArray():System.Char[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToCharArray" uniqueID="ToCharArray(System.Int32;System.Int32):System.Char[]">
				<signature>System.String.ToCharArray(System.Int32;System.Int32):System.Char[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLower" uniqueID="ToLower():System.String">
				<signature>System.String.ToLower():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLower" uniqueID="ToLower(System.Globalization.CultureInfo):System.String">
				<signature>System.String.ToLower(System.Globalization.CultureInfo):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLowerInvariant" uniqueID="ToLowerInvariant():System.String">
				<signature>System.String.ToLowerInvariant():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.String.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.String.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpper" uniqueID="ToUpper():System.String">
				<signature>System.String.ToUpper():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpper" uniqueID="ToUpper(System.Globalization.CultureInfo):System.String">
				<signature>System.String.ToUpper(System.Globalization.CultureInfo):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpperInvariant" uniqueID="ToUpperInvariant():System.String">
				<signature>System.String.ToUpperInvariant():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Trim" uniqueID="Trim():System.String">
				<signature>System.String.Trim():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Trim" uniqueID="Trim(System.Char[]):System.String">
				<signature>System.String.Trim(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimEnd" uniqueID="TrimEnd(System.Char[]):System.String">
				<signature>System.String.TrimEnd(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrimHelper" uniqueID="TrimHelper(System.Char[];System.Int32):System.String">
				<signature>System.String.TrimHelper(System.Char[];System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimStart" uniqueID="TrimStart(System.Char[]):System.String">
				<signature>System.String.TrimStart(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ArrayLength" uniqueID="get_ArrayLength():System.Int32">
				<signature>System.String.get_ArrayLength():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.String.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Chars" uniqueID="get_Chars(System.Int32):System.Char">
				<signature>System.String.get_Chars(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FirstChar" uniqueID="get_FirstChar():System.Char">
				<signature>System.String.get_FirstChar():System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int32">
				<signature>System.String.get_Length():System.Int32</signature>
			</method>
		</class>
		<class name="Type" uniqueID="System.Type">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Type.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateBinder" uniqueID="CreateBinder():System.Void">
				<signature>System.Type.CreateBinder():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String):System.Type">
				<signature>System.Type.GetType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeArray" uniqueID="GetTypeArray(System.Object[]):System.Type[]">
				<signature>System.Type.GetTypeArray(System.Object[]):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeCode" uniqueID="GetTypeCode(System.Type):System.TypeCode">
				<signature>System.Type.GetTypeCode(System.Type):System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.String):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromHandle" uniqueID="GetTypeFromHandle(System.RuntimeTypeHandle):System.Type">
				<signature>System.Type.GetTypeFromHandle(System.RuntimeTypeHandle):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.String):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeHandle" uniqueID="GetTypeHandle(System.Object):System.RuntimeTypeHandle">
				<signature>System.Type.GetTypeHandle(System.Object):System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReflectionOnlyGetType" uniqueID="ReflectionOnlyGetType(System.String;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.ReflectionOnlyGetType(System.String;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ResolveTypeRelativeTo" uniqueID="ResolveTypeRelativeTo(System.String;System.Int32;System.Int32;System.Type):System.Type">
				<signature>System.Type.ResolveTypeRelativeTo(System.String;System.Int32;System.Int32;System.Type):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ResolveTypeRelativeToBaseTypes" uniqueID="ResolveTypeRelativeToBaseTypes(System.String;System.Int32;System.Int32;System.Type):System.Type">
				<signature>System.Type.ResolveTypeRelativeToBaseTypes(System.String;System.Int32;System.Int32;System.Type):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_DefaultBinder" uniqueID="get_DefaultBinder():System.Reflection.Binder">
				<signature>System.Type.get_DefaultBinder():System.Reflection.Binder</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Type.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type):System.Boolean">
				<signature>System.Type.Equals(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindInterfaces" uniqueID="FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]">
				<signature>System.Type.FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindMembers" uniqueID="FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]">
				<signature>System.Type.FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetArrayRank" uniqueID="GetArrayRank():System.Int32">
				<signature>System.Type.GetArrayRank():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetAttributeFlagsImpl" uniqueID="GetAttributeFlagsImpl():System.Reflection.TypeAttributes">
				<signature>System.Type.GetAttributeFlagsImpl():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Type[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Type[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetConstructorImpl" uniqueID="GetConstructorImpl(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructorImpl(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors():System.Reflection.ConstructorInfo[]">
				<signature>System.Type.GetConstructors():System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]">
				<signature>System.Type.GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultMemberName" uniqueID="GetDefaultMemberName():System.String">
				<signature>System.Type.GetDefaultMemberName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDefaultMembers" uniqueID="GetDefaultMembers():System.Reflection.MemberInfo[]">
				<signature>System.Type.GetDefaultMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetElementType" uniqueID="GetElementType():System.Type">
				<signature>System.Type.GetElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String):System.Reflection.EventInfo">
				<signature>System.Type.GetEvent(System.String):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo">
				<signature>System.Type.GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents():System.Reflection.EventInfo[]">
				<signature>System.Type.GetEvents():System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]">
				<signature>System.Type.GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String):System.Reflection.FieldInfo">
				<signature>System.Type.GetField(System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Type.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields():System.Reflection.FieldInfo[]">
				<signature>System.Type.GetFields():System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Type.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericArguments" uniqueID="GetGenericArguments():System.Type[]">
				<signature>System.Type.GetGenericArguments():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericParameterConstraints" uniqueID="GetGenericParameterConstraints():System.Type[]">
				<signature>System.Type.GetGenericParameterConstraints():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericTypeDefinition" uniqueID="GetGenericTypeDefinition():System.Type">
				<signature>System.Type.GetGenericTypeDefinition():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Type.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String):System.Type">
				<signature>System.Type.GetInterface(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetInterface(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaceMap" uniqueID="GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping">
				<signature>System.Type.GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaces" uniqueID="GetInterfaces():System.Type[]">
				<signature>System.Type.GetInterfaces():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers():System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethodImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods():System.Reflection.MethodInfo[]">
				<signature>System.Type.GetMethods():System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Type.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String):System.Type">
				<signature>System.Type.GetNestedType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String;System.Reflection.BindingFlags):System.Type">
				<signature>System.Type.GetNestedType(System.String;System.Reflection.BindingFlags):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes():System.Type[]">
				<signature>System.Type.GetNestedTypes():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes(System.Reflection.BindingFlags):System.Type[]">
				<signature>System.Type.GetNestedTypes(System.Reflection.BindingFlags):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties():System.Reflection.PropertyInfo[]">
				<signature>System.Type.GetProperties():System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Type.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPropertyImpl" uniqueID="GetPropertyImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetPropertyImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRootElementType" uniqueID="GetRootElementType():System.Type">
				<signature>System.Type.GetRootElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Type.GetType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeCodeInternal" uniqueID="GetTypeCodeInternal():System.TypeCode">
				<signature>System.Type.GetTypeCodeInternal():System.TypeCode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeHandleInternal" uniqueID="GetTypeHandleInternal():System.RuntimeTypeHandle">
				<signature>System.Type.GetTypeHandleInternal():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasElementTypeImpl" uniqueID="HasElementTypeImpl():System.Boolean">
				<signature>System.Type.HasElementTypeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasProxyAttributeImpl" uniqueID="HasProxyAttributeImpl():System.Boolean">
				<signature>System.Type.HasProxyAttributeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsArrayImpl" uniqueID="IsArrayImpl():System.Boolean">
				<signature>System.Type.IsArrayImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsAssignableFrom" uniqueID="IsAssignableFrom(System.Type):System.Boolean">
				<signature>System.Type.IsAssignableFrom(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsByRefImpl" uniqueID="IsByRefImpl():System.Boolean">
				<signature>System.Type.IsByRefImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsCOMObjectImpl" uniqueID="IsCOMObjectImpl():System.Boolean">
				<signature>System.Type.IsCOMObjectImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsContextfulImpl" uniqueID="IsContextfulImpl():System.Boolean">
				<signature>System.Type.IsContextfulImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Object):System.Boolean">
				<signature>System.Type.IsInstanceOfType(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsMarshalByRefImpl" uniqueID="IsMarshalByRefImpl():System.Boolean">
				<signature>System.Type.IsMarshalByRefImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsPointerImpl" uniqueID="IsPointerImpl():System.Boolean">
				<signature>System.Type.IsPointerImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsPrimitiveImpl" uniqueID="IsPrimitiveImpl():System.Boolean">
				<signature>System.Type.IsPrimitiveImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubclassOf" uniqueID="IsSubclassOf(System.Type):System.Boolean">
				<signature>System.Type.IsSubclassOf(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsValueTypeImpl" uniqueID="IsValueTypeImpl():System.Boolean">
				<signature>System.Type.IsValueTypeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeArrayType" uniqueID="MakeArrayType():System.Type">
				<signature>System.Type.MakeArrayType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeArrayType" uniqueID="MakeArrayType(System.Int32):System.Type">
				<signature>System.Type.MakeArrayType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeByRefType" uniqueID="MakeByRefType():System.Type">
				<signature>System.Type.MakeByRefType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeGenericType" uniqueID="MakeGenericType(System.Type[]):System.Type">
				<signature>System.Type.MakeGenericType(System.Type[]):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakePointerType" uniqueID="MakePointerType():System.Type">
				<signature>System.Type.MakePointerType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="QuickSerializationCastCheck" uniqueID="QuickSerializationCastCheck():System.Boolean">
				<signature>System.Type.QuickSerializationCastCheck():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SigToString" uniqueID="SigToString():System.String">
				<signature>System.Type.SigToString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetTypeInfo" uniqueID="System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.Invoke" uniqueID="System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Type.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Type" uniqueID="Type():System.Void">
				<signature>System.Type.Type():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Assembly" uniqueID="get_Assembly():System.Reflection.Assembly">
				<signature>System.Type.get_Assembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AssemblyQualifiedName" uniqueID="get_AssemblyQualifiedName():System.String">
				<signature>System.Type.get_AssemblyQualifiedName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.TypeAttributes">
				<signature>System.Type.get_Attributes():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseType" uniqueID="get_BaseType():System.Type">
				<signature>System.Type.get_BaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContainsGenericParameters" uniqueID="get_ContainsGenericParameters():System.Boolean">
				<signature>System.Type.get_ContainsGenericParameters():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringMethod" uniqueID="get_DeclaringMethod():System.Reflection.MethodBase">
				<signature>System.Type.get_DeclaringMethod():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Type.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FullName" uniqueID="get_FullName():System.String">
				<signature>System.Type.get_FullName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GUID" uniqueID="get_GUID():System.Guid">
				<signature>System.Type.get_GUID():System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericParameterAttributes" uniqueID="get_GenericParameterAttributes():System.Reflection.GenericParameterAttributes">
				<signature>System.Type.get_GenericParameterAttributes():System.Reflection.GenericParameterAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericParameterPosition" uniqueID="get_GenericParameterPosition():System.Int32">
				<signature>System.Type.get_GenericParameterPosition():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasElementType" uniqueID="get_HasElementType():System.Boolean">
				<signature>System.Type.get_HasElementType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasProxyAttribute" uniqueID="get_HasProxyAttribute():System.Boolean">
				<signature>System.Type.get_HasProxyAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Type.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAnsiClass" uniqueID="get_IsAnsiClass():System.Boolean">
				<signature>System.Type.get_IsAnsiClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsArray" uniqueID="get_IsArray():System.Boolean">
				<signature>System.Type.get_IsArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoClass" uniqueID="get_IsAutoClass():System.Boolean">
				<signature>System.Type.get_IsAutoClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoLayout" uniqueID="get_IsAutoLayout():System.Boolean">
				<signature>System.Type.get_IsAutoLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>System.Type.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCOMObject" uniqueID="get_IsCOMObject():System.Boolean">
				<signature>System.Type.get_IsCOMObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClass" uniqueID="get_IsClass():System.Boolean">
				<signature>System.Type.get_IsClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsContextful" uniqueID="get_IsContextful():System.Boolean">
				<signature>System.Type.get_IsContextful():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEnum" uniqueID="get_IsEnum():System.Boolean">
				<signature>System.Type.get_IsEnum():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsExplicitLayout" uniqueID="get_IsExplicitLayout():System.Boolean">
				<signature>System.Type.get_IsExplicitLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericParameter" uniqueID="get_IsGenericParameter():System.Boolean">
				<signature>System.Type.get_IsGenericParameter():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericType" uniqueID="get_IsGenericType():System.Boolean">
				<signature>System.Type.get_IsGenericType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericTypeDefinition" uniqueID="get_IsGenericTypeDefinition():System.Boolean">
				<signature>System.Type.get_IsGenericTypeDefinition():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsImport" uniqueID="get_IsImport():System.Boolean">
				<signature>System.Type.get_IsImport():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInterface" uniqueID="get_IsInterface():System.Boolean">
				<signature>System.Type.get_IsInterface():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLayoutSequential" uniqueID="get_IsLayoutSequential():System.Boolean">
				<signature>System.Type.get_IsLayoutSequential():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsMarshalByRef" uniqueID="get_IsMarshalByRef():System.Boolean">
				<signature>System.Type.get_IsMarshalByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNested" uniqueID="get_IsNested():System.Boolean">
				<signature>System.Type.get_IsNested():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedAssembly" uniqueID="get_IsNestedAssembly():System.Boolean">
				<signature>System.Type.get_IsNestedAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamANDAssem" uniqueID="get_IsNestedFamANDAssem():System.Boolean">
				<signature>System.Type.get_IsNestedFamANDAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamORAssem" uniqueID="get_IsNestedFamORAssem():System.Boolean">
				<signature>System.Type.get_IsNestedFamORAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamily" uniqueID="get_IsNestedFamily():System.Boolean">
				<signature>System.Type.get_IsNestedFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPrivate" uniqueID="get_IsNestedPrivate():System.Boolean">
				<signature>System.Type.get_IsNestedPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPublic" uniqueID="get_IsNestedPublic():System.Boolean">
				<signature>System.Type.get_IsNestedPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotPublic" uniqueID="get_IsNotPublic():System.Boolean">
				<signature>System.Type.get_IsNotPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPointer" uniqueID="get_IsPointer():System.Boolean">
				<signature>System.Type.get_IsPointer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrimitive" uniqueID="get_IsPrimitive():System.Boolean">
				<signature>System.Type.get_IsPrimitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Type.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSealed" uniqueID="get_IsSealed():System.Boolean">
				<signature>System.Type.get_IsSealed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSerializable" uniqueID="get_IsSerializable():System.Boolean">
				<signature>System.Type.get_IsSerializable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Type.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsSzArray" uniqueID="get_IsSzArray():System.Boolean">
				<signature>System.Type.get_IsSzArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsUnicodeClass" uniqueID="get_IsUnicodeClass():System.Boolean">
				<signature>System.Type.get_IsUnicodeClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValueType" uniqueID="get_IsValueType():System.Boolean">
				<signature>System.Type.get_IsValueType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsVisible" uniqueID="get_IsVisible():System.Boolean">
				<signature>System.Type.get_IsVisible():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Type.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Type.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Type.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Type.get_ReflectedType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StructLayoutAttribute" uniqueID="get_StructLayoutAttribute():System.Runtime.InteropServices.StructLayoutAttribute">
				<signature>System.Type.get_StructLayoutAttribute():System.Runtime.InteropServices.StructLayoutAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeHandle" uniqueID="get_TypeHandle():System.RuntimeTypeHandle">
				<signature>System.Type.get_TypeHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeInitializer" uniqueID="get_TypeInitializer():System.Reflection.ConstructorInfo">
				<signature>System.Type.get_TypeInitializer():System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Type.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="System.IO">
		<class name="Stream" uniqueID="System.IO.Stream">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.Stream.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.IO.Stream):System.IO.Stream">
				<signature>System.IO.Stream.Synchronized(System.IO.Stream):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginRead" uniqueID="BeginRead(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.IO.Stream.BeginRead(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginWrite" uniqueID="BeginWrite(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.IO.Stream.BeginWrite(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.IO.Stream.Close():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateWaitHandle" uniqueID="CreateWaitHandle():System.Threading.WaitHandle">
				<signature>System.IO.Stream.CreateWaitHandle():System.Threading.WaitHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.IO.Stream.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.Stream.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndRead" uniqueID="EndRead(System.IAsyncResult):System.Int32">
				<signature>System.IO.Stream.EndRead(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndWrite" uniqueID="EndWrite(System.IAsyncResult):System.Void">
				<signature>System.IO.Stream.EndWrite(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Flush" uniqueID="Flush():System.Void">
				<signature>System.IO.Stream.Flush():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read(System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.Stream.Read(System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadByte" uniqueID="ReadByte():System.Int32">
				<signature>System.IO.Stream.ReadByte():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Seek" uniqueID="Seek(System.Int64;System.IO.SeekOrigin):System.Int64">
				<signature>System.IO.Stream.Seek(System.Int64;System.IO.SeekOrigin):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetLength" uniqueID="SetLength(System.Int64):System.Void">
				<signature>System.IO.Stream.SetLength(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Stream" uniqueID="Stream():System.Void">
				<signature>System.IO.Stream.Stream():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Byte[];System.Int32;System.Int32):System.Void">
				<signature>System.IO.Stream.Write(System.Byte[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteByte" uniqueID="WriteByte(System.Byte):System.Void">
				<signature>System.IO.Stream.WriteByte(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="_CloseAsyncActiveEvent" uniqueID="_CloseAsyncActiveEvent(System.Int32):System.Void">
				<signature>System.IO.Stream._CloseAsyncActiveEvent(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanRead" uniqueID="get_CanRead():System.Boolean">
				<signature>System.IO.Stream.get_CanRead():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanSeek" uniqueID="get_CanSeek():System.Boolean">
				<signature>System.IO.Stream.get_CanSeek():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanTimeout" uniqueID="get_CanTimeout():System.Boolean">
				<signature>System.IO.Stream.get_CanTimeout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanWrite" uniqueID="get_CanWrite():System.Boolean">
				<signature>System.IO.Stream.get_CanWrite():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int64">
				<signature>System.IO.Stream.get_Length():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Position" uniqueID="get_Position():System.Int64">
				<signature>System.IO.Stream.get_Position():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReadTimeout" uniqueID="get_ReadTimeout():System.Int32">
				<signature>System.IO.Stream.get_ReadTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WriteTimeout" uniqueID="get_WriteTimeout():System.Int32">
				<signature>System.IO.Stream.get_WriteTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Position" uniqueID="set_Position(System.Int64):System.Void">
				<signature>System.IO.Stream.set_Position(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ReadTimeout" uniqueID="set_ReadTimeout(System.Int32):System.Void">
				<signature>System.IO.Stream.set_ReadTimeout(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_WriteTimeout" uniqueID="set_WriteTimeout(System.Int32):System.Void">
				<signature>System.IO.Stream.set_WriteTimeout(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="FileStream" uniqueID="System.IO.FileStream">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.FileStream.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="AsyncFSCallback" uniqueID="AsyncFSCallback(System.UInt32;System.UInt32;System.Threading.NativeOverlapped):System.Void">
				<signature>System.IO.FileStream.AsyncFSCallback(System.UInt32;System.UInt32;System.Threading.NativeOverlapped):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetSecAttrs" uniqueID="GetSecAttrs(System.IO.FileShare):Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES">
				<signature>System.IO.FileStream.GetSecAttrs(System.IO.FileShare):Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetSecAttrs" uniqueID="GetSecAttrs(System.IO.FileShare;System.Security.AccessControl.FileSecurity;System.Object):Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES">
				<signature>System.IO.FileStream.GetSecAttrs(System.IO.FileShare;System.Security.AccessControl.FileSecurity;System.Object):Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginRead" uniqueID="BeginRead(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.IO.FileStream.BeginRead(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginReadCore" uniqueID="BeginReadCore(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object;System.Int32):System.IO.FileStreamAsyncResult">
				<signature>System.IO.FileStream.BeginReadCore(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object;System.Int32):System.IO.FileStreamAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginWrite" uniqueID="BeginWrite(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.IO.FileStream.BeginWrite(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginWriteCore" uniqueID="BeginWriteCore(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IO.FileStreamAsyncResult">
				<signature>System.IO.FileStream.BeginWriteCore(System.Byte[];System.Int32;System.Int32;System.AsyncCallback;System.Object):System.IO.FileStreamAsyncResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.FileStream.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndRead" uniqueID="EndRead(System.IAsyncResult):System.Int32">
				<signature>System.IO.FileStream.EndRead(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndWrite" uniqueID="EndWrite(System.IAsyncResult):System.Void">
				<signature>System.IO.FileStream.EndWrite(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FileStream" uniqueID="FileStream():System.Void">
				<signature>System.IO.FileStream.FileStream():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IO.FileAccess):System.Void">
				<signature>System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IO.FileAccess):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IO.FileAccess;System.Int32):System.Void">
				<signature>System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IO.FileAccess;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IO.FileAccess;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IO.FileAccess;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.IntPtr;System.IO.FileAccess):System.Void">
				<signature>System.IO.FileStream.FileStream(System.IntPtr;System.IO.FileAccess):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.IntPtr;System.IO.FileAccess;System.Boolean):System.Void">
				<signature>System.IO.FileStream.FileStream(System.IntPtr;System.IO.FileAccess;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.IntPtr;System.IO.FileAccess;System.Boolean;System.Int32):System.Void">
				<signature>System.IO.FileStream.FileStream(System.IntPtr;System.IO.FileAccess;System.Boolean;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.IntPtr;System.IO.FileAccess;System.Boolean;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.FileStream.FileStream(System.IntPtr;System.IO.FileAccess;System.Boolean;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.IO.FileAccess):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.IO.FileAccess):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32;System.IO.FileOptions):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32;System.IO.FileOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32;System.IO.FileOptions;System.String;System.Boolean):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.IO.FileAccess;System.IO.FileShare;System.Int32;System.IO.FileOptions;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.Security.AccessControl.FileSystemRights;System.IO.FileShare;System.Int32;System.IO.FileOptions):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.Security.AccessControl.FileSystemRights;System.IO.FileShare;System.Int32;System.IO.FileOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FileStream" uniqueID="FileStream(System.String;System.IO.FileMode;System.Security.AccessControl.FileSystemRights;System.IO.FileShare;System.Int32;System.IO.FileOptions;System.Security.AccessControl.FileSecurity):System.Void">
				<signature>System.IO.FileStream.FileStream(System.String;System.IO.FileMode;System.Security.AccessControl.FileSystemRights;System.IO.FileShare;System.Int32;System.IO.FileOptions;System.Security.AccessControl.FileSecurity):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finalize" uniqueID="Finalize():System.Void">
				<signature>System.IO.FileStream.Finalize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Flush" uniqueID="Flush():System.Void">
				<signature>System.IO.FileStream.Flush():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FlushRead" uniqueID="FlushRead():System.Void">
				<signature>System.IO.FileStream.FlushRead():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FlushWrite" uniqueID="FlushWrite(System.Boolean):System.Void">
				<signature>System.IO.FileStream.FlushWrite(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAccessControl" uniqueID="GetAccessControl():System.Security.AccessControl.FileSecurity">
				<signature>System.IO.FileStream.GetAccessControl():System.Security.AccessControl.FileSecurity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Init" uniqueID="Init(System.String;System.IO.FileMode;System.IO.FileAccess;System.Int32;System.Boolean;System.IO.FileShare;System.Int32;System.IO.FileOptions;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.String;System.Boolean):System.Void">
				<signature>System.IO.FileStream.Init(System.String;System.IO.FileMode;System.IO.FileAccess;System.Int32;System.Boolean;System.IO.FileShare;System.Int32;System.IO.FileOptions;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Lock" uniqueID="Lock(System.Int64;System.Int64):System.Void">
				<signature>System.IO.FileStream.Lock(System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read(System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.FileStream.Read(System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadByte" uniqueID="ReadByte():System.Int32">
				<signature>System.IO.FileStream.ReadByte():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadCore" uniqueID="ReadCore(System.Byte[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.FileStream.ReadCore(System.Byte[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadFileNative" uniqueID="ReadFileNative(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte[];System.Int32;System.Int32;System.Threading.NativeOverlapped;System.Int32):System.Int32">
				<signature>System.IO.FileStream.ReadFileNative(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte[];System.Int32;System.Int32;System.Threading.NativeOverlapped;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Seek" uniqueID="Seek(System.Int64;System.IO.SeekOrigin):System.Int64">
				<signature>System.IO.FileStream.Seek(System.Int64;System.IO.SeekOrigin):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SeekCore" uniqueID="SeekCore(System.Int64;System.IO.SeekOrigin):System.Int64">
				<signature>System.IO.FileStream.SeekCore(System.Int64;System.IO.SeekOrigin):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetAccessControl" uniqueID="SetAccessControl(System.Security.AccessControl.FileSecurity):System.Void">
				<signature>System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetLength" uniqueID="SetLength(System.Int64):System.Void">
				<signature>System.IO.FileStream.SetLength(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetLengthCore" uniqueID="SetLengthCore(System.Int64):System.Void">
				<signature>System.IO.FileStream.SetLengthCore(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Unlock" uniqueID="Unlock(System.Int64;System.Int64):System.Void">
				<signature>System.IO.FileStream.Unlock(System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="VerifyHandleIsSync" uniqueID="VerifyHandleIsSync():System.Void">
				<signature>System.IO.FileStream.VerifyHandleIsSync():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="VerifyOSHandlePosition" uniqueID="VerifyOSHandlePosition():System.Void">
				<signature>System.IO.FileStream.VerifyOSHandlePosition():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Byte[];System.Int32;System.Int32):System.Void">
				<signature>System.IO.FileStream.Write(System.Byte[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteByte" uniqueID="WriteByte(System.Byte):System.Void">
				<signature>System.IO.FileStream.WriteByte(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteCore" uniqueID="WriteCore(System.Byte[];System.Int32;System.Int32):System.Void">
				<signature>System.IO.FileStream.WriteCore(System.Byte[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteFileNative" uniqueID="WriteFileNative(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte[];System.Int32;System.Int32;System.Threading.NativeOverlapped;System.Int32):System.Int32">
				<signature>System.IO.FileStream.WriteFileNative(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte[];System.Int32;System.Int32;System.Threading.NativeOverlapped;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanRead" uniqueID="get_CanRead():System.Boolean">
				<signature>System.IO.FileStream.get_CanRead():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanSeek" uniqueID="get_CanSeek():System.Boolean">
				<signature>System.IO.FileStream.get_CanSeek():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanWrite" uniqueID="get_CanWrite():System.Boolean">
				<signature>System.IO.FileStream.get_CanWrite():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Handle" uniqueID="get_Handle():System.IntPtr">
				<signature>System.IO.FileStream.get_Handle():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAsync" uniqueID="get_IsAsync():System.Boolean">
				<signature>System.IO.FileStream.get_IsAsync():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int64">
				<signature>System.IO.FileStream.get_Length():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.IO.FileStream.get_Name():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NameInternal" uniqueID="get_NameInternal():System.String">
				<signature>System.IO.FileStream.get_NameInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Position" uniqueID="get_Position():System.Int64">
				<signature>System.IO.FileStream.get_Position():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SafeFileHandle" uniqueID="get_SafeFileHandle():Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>System.IO.FileStream.get_SafeFileHandle():Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Position" uniqueID="set_Position(System.Int64):System.Void">
				<signature>System.IO.FileStream.set_Position(System.Int64):System.Void</signature>
			</method>
		</class>
		<class name="StreamReader" uniqueID="System.IO.StreamReader">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.StreamReader.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.IO.StreamReader.Close():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompressBuffer" uniqueID="CompressBuffer(System.Int32):System.Void">
				<signature>System.IO.StreamReader.CompressBuffer(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DetectEncoding" uniqueID="DetectEncoding():System.Void">
				<signature>System.IO.StreamReader.DetectEncoding():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DiscardBufferedData" uniqueID="DiscardBufferedData():System.Void">
				<signature>System.IO.StreamReader.DiscardBufferedData():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.StreamReader.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Init" uniqueID="Init(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32):System.Void">
				<signature>System.IO.StreamReader.Init(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsPreamble" uniqueID="IsPreamble():System.Boolean">
				<signature>System.IO.StreamReader.IsPreamble():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Peek" uniqueID="Peek():System.Int32">
				<signature>System.IO.StreamReader.Peek():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read():System.Int32">
				<signature>System.IO.StreamReader.Read():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.StreamReader.Read(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadBuffer" uniqueID="ReadBuffer():System.Int32">
				<signature>System.IO.StreamReader.ReadBuffer():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadBuffer" uniqueID="ReadBuffer(System.Char[];System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.IO.StreamReader.ReadBuffer(System.Char[];System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadLine" uniqueID="ReadLine():System.String">
				<signature>System.IO.StreamReader.ReadLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadToEnd" uniqueID="ReadToEnd():System.String">
				<signature>System.IO.StreamReader.ReadToEnd():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StreamReader" uniqueID="StreamReader():System.Void">
				<signature>System.IO.StreamReader.StreamReader():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Text.Encoding):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Text.Encoding;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Text.Encoding;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Text.Encoding;System.Boolean;System.Int32):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Text.Encoding;System.Boolean;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseStream" uniqueID="get_BaseStream():System.IO.Stream">
				<signature>System.IO.StreamReader.get_BaseStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Closable" uniqueID="get_Closable():System.Boolean">
				<signature>System.IO.StreamReader.get_Closable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentEncoding" uniqueID="get_CurrentEncoding():System.Text.Encoding">
				<signature>System.IO.StreamReader.get_CurrentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EndOfStream" uniqueID="get_EndOfStream():System.Boolean">
				<signature>System.IO.StreamReader.get_EndOfStream():System.Boolean</signature>
			</method>
		</class>
		<class name="TextReader" uniqueID="System.IO.TextReader">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.TextReader.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.IO.TextReader):System.IO.TextReader">
				<signature>System.IO.TextReader.Synchronized(System.IO.TextReader):System.IO.TextReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.IO.TextReader.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.IO.TextReader.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.TextReader.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Peek" uniqueID="Peek():System.Int32">
				<signature>System.IO.TextReader.Peek():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read():System.Int32">
				<signature>System.IO.TextReader.Read():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.TextReader.Read(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadBlock" uniqueID="ReadBlock(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.TextReader.ReadBlock(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadLine" uniqueID="ReadLine():System.String">
				<signature>System.IO.TextReader.ReadLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadToEnd" uniqueID="ReadToEnd():System.String">
				<signature>System.IO.TextReader.ReadToEnd():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TextReader" uniqueID="TextReader():System.Void">
				<signature>System.IO.TextReader.TextReader():System.Void</signature>
			</method>
		</class>
		<class name="TextWriter" uniqueID="System.IO.TextWriter">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.TextWriter.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.IO.TextWriter):System.IO.TextWriter">
				<signature>System.IO.TextWriter.Synchronized(System.IO.TextWriter):System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.IO.TextWriter.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.IO.TextWriter.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.TextWriter.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Flush" uniqueID="Flush():System.Void">
				<signature>System.IO.TextWriter.Flush():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TextWriter" uniqueID="TextWriter():System.Void">
				<signature>System.IO.TextWriter.TextWriter():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TextWriter" uniqueID="TextWriter(System.IFormatProvider):System.Void">
				<signature>System.IO.TextWriter.TextWriter(System.IFormatProvider):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Boolean):System.Void">
				<signature>System.IO.TextWriter.Write(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char):System.Void">
				<signature>System.IO.TextWriter.Write(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char[]):System.Void">
				<signature>System.IO.TextWriter.Write(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.IO.TextWriter.Write(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Decimal):System.Void">
				<signature>System.IO.TextWriter.Write(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Double):System.Void">
				<signature>System.IO.TextWriter.Write(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Int32):System.Void">
				<signature>System.IO.TextWriter.Write(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Int64):System.Void">
				<signature>System.IO.TextWriter.Write(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Object):System.Void">
				<signature>System.IO.TextWriter.Write(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Single):System.Void">
				<signature>System.IO.TextWriter.Write(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String):System.Void">
				<signature>System.IO.TextWriter.Write(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String;System.Object):System.Void">
				<signature>System.IO.TextWriter.Write(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String;System.Object;System.Object):System.Void">
				<signature>System.IO.TextWriter.Write(System.String;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String;System.Object;System.Object;System.Object):System.Void">
				<signature>System.IO.TextWriter.Write(System.String;System.Object;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String;System.Object[]):System.Void">
				<signature>System.IO.TextWriter.Write(System.String;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.UInt32):System.Void">
				<signature>System.IO.TextWriter.Write(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.UInt64):System.Void">
				<signature>System.IO.TextWriter.Write(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine():System.Void">
				<signature>System.IO.TextWriter.WriteLine():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Boolean):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Char):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Char[]):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Decimal):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Double):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Int32):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Int64):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Object):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.Single):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.String):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.String;System.Object):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.String;System.Object;System.Object):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.String;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.String;System.Object;System.Object;System.Object):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.String;System.Object;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.String;System.Object[]):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.String;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.UInt32):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteLine" uniqueID="WriteLine(System.UInt64):System.Void">
				<signature>System.IO.TextWriter.WriteLine(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Encoding" uniqueID="get_Encoding():System.Text.Encoding">
				<signature>System.IO.TextWriter.get_Encoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FormatProvider" uniqueID="get_FormatProvider():System.IFormatProvider">
				<signature>System.IO.TextWriter.get_FormatProvider():System.IFormatProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NewLine" uniqueID="get_NewLine():System.String">
				<signature>System.IO.TextWriter.get_NewLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_NewLine" uniqueID="set_NewLine(System.String):System.Void">
				<signature>System.IO.TextWriter.set_NewLine(System.String):System.Void</signature>
			</method>
		</class>
		<class name="StreamWriter" uniqueID="System.IO.StreamWriter">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.StreamWriter.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateFile" uniqueID="CreateFile(System.String;System.Boolean):System.IO.Stream">
				<signature>System.IO.StreamWriter.CreateFile(System.String;System.Boolean):System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_UTF8NoBOM" uniqueID="get_UTF8NoBOM():System.Text.Encoding">
				<signature>System.IO.StreamWriter.get_UTF8NoBOM():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.IO.StreamWriter.Close():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.StreamWriter.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Flush" uniqueID="Flush():System.Void">
				<signature>System.IO.StreamWriter.Flush():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Flush" uniqueID="Flush(System.Boolean;System.Boolean):System.Void">
				<signature>System.IO.StreamWriter.Flush(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Init" uniqueID="Init(System.IO.Stream;System.Text.Encoding;System.Int32):System.Void">
				<signature>System.IO.StreamWriter.Init(System.IO.Stream;System.Text.Encoding;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter():System.Void">
				<signature>System.IO.StreamWriter.StreamWriter():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.IO.Stream):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.IO.Stream;System.Text.Encoding):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.IO.Stream;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.IO.Stream;System.Text.Encoding;System.Int32):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.IO.Stream;System.Text.Encoding;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.IO.Stream;System.Text.Encoding;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.IO.Stream;System.Text.Encoding;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.String):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.String;System.Boolean):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.String;System.Boolean;System.Text.Encoding):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.String;System.Boolean;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamWriter" uniqueID="StreamWriter(System.String;System.Boolean;System.Text.Encoding;System.Int32):System.Void">
				<signature>System.IO.StreamWriter.StreamWriter(System.String;System.Boolean;System.Text.Encoding;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char):System.Void">
				<signature>System.IO.StreamWriter.Write(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char[]):System.Void">
				<signature>System.IO.StreamWriter.Write(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.IO.StreamWriter.Write(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String):System.Void">
				<signature>System.IO.StreamWriter.Write(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoFlush" uniqueID="get_AutoFlush():System.Boolean">
				<signature>System.IO.StreamWriter.get_AutoFlush():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseStream" uniqueID="get_BaseStream():System.IO.Stream">
				<signature>System.IO.StreamWriter.get_BaseStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Closable" uniqueID="get_Closable():System.Boolean">
				<signature>System.IO.StreamWriter.get_Closable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Encoding" uniqueID="get_Encoding():System.Text.Encoding">
				<signature>System.IO.StreamWriter.get_Encoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoFlush" uniqueID="set_AutoFlush(System.Boolean):System.Void">
				<signature>System.IO.StreamWriter.set_AutoFlush(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HaveWrittenPreamble" uniqueID="set_HaveWrittenPreamble(System.Boolean):System.Void">
				<signature>System.IO.StreamWriter.set_HaveWrittenPreamble(System.Boolean):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="Microsoft.Win32">
		<class name="Win32Native" uniqueID="Microsoft.Win32.Win32Native">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>Microsoft.Win32.Win32Native.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AdjustTokenPrivileges" uniqueID="AdjustTokenPrivileges(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Boolean;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.AdjustTokenPrivileges(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Boolean;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AllocateLocallyUniqueId" uniqueID="AllocateLocallyUniqueId(Microsoft.Win32.Win32Native+LUID):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.AllocateLocallyUniqueId(Microsoft.Win32.Win32Native+LUID):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="BCryptGetFipsAlgorithmMode" uniqueID="BCryptGetFipsAlgorithmMode(System.Boolean):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.BCryptGetFipsAlgorithmMode(System.Boolean):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Beep" uniqueID="Beep(System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.Beep(System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckTokenMembership" uniqueID="CheckTokenMembership(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Byte[];System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CheckTokenMembership(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Byte[];System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CloseHandle" uniqueID="CloseHandle(System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CloseHandle(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoTaskMemAlloc" uniqueID="CoTaskMemAlloc(System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.CoTaskMemAlloc(System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoTaskMemFree" uniqueID="CoTaskMemFree(System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.CoTaskMemFree(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoTaskMemRealloc" uniqueID="CoTaskMemRealloc(System.IntPtr;System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.CoTaskMemRealloc(System.IntPtr;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertSdToStringSd" uniqueID="ConvertSdToStringSd(System.Byte[];System.UInt32;System.UInt32;System.IntPtr;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ConvertSdToStringSd(System.Byte[];System.UInt32;System.UInt32;System.IntPtr;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertStringSdToSd" uniqueID="ConvertStringSdToSd(System.String;System.UInt32;System.IntPtr;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ConvertStringSdToSd(System.String;System.UInt32;System.IntPtr;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertStringSidToSid" uniqueID="ConvertStringSidToSid(System.String;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ConvertStringSidToSid(System.String;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyFile" uniqueID="CopyFile(System.String;System.String;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CopyFile(System.String;System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyMemoryAnsi" uniqueID="CopyMemoryAnsi(System.IntPtr;System.String;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.CopyMemoryAnsi(System.IntPtr;System.String;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyMemoryAnsi" uniqueID="CopyMemoryAnsi(System.Text.StringBuilder;System.IntPtr;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.CopyMemoryAnsi(System.Text.StringBuilder;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyMemoryUni" uniqueID="CopyMemoryUni(System.IntPtr;System.String;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.CopyMemoryUni(System.IntPtr;System.String;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyMemoryUni" uniqueID="CopyMemoryUni(System.Text.StringBuilder;System.IntPtr;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.CopyMemoryUni(System.Text.StringBuilder;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateAssemblyEnum" uniqueID="CreateAssemblyEnum(Microsoft.Win32.IAssemblyEnum;Microsoft.Win32.IApplicationContext;Microsoft.Win32.IAssemblyName;System.UInt32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.CreateAssemblyEnum(Microsoft.Win32.IAssemblyEnum;Microsoft.Win32.IApplicationContext;Microsoft.Win32.IAssemblyName;System.UInt32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateAssemblyNameObject" uniqueID="CreateAssemblyNameObject(Microsoft.Win32.IAssemblyName;System.String;System.UInt32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.CreateAssemblyNameObject(Microsoft.Win32.IAssemblyName;System.String;System.UInt32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDirectory" uniqueID="CreateDirectory(System.String;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CreateDirectory(System.String;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateEvent" uniqueID="CreateEvent(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.CreateEvent(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateFile" uniqueID="CreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>Microsoft.Win32.Win32Native.CreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateFileMapping" uniqueID="CreateFileMapping(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IntPtr;System.UInt32;System.UInt32;System.UInt32;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle">
				<signature>Microsoft.Win32.Win32Native.CreateFileMapping(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IntPtr;System.UInt32;System.UInt32;System.UInt32;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateMutex" uniqueID="CreateMutex(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.CreateMutex(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateWellKnownSid" uniqueID="CreateWellKnownSid(System.Int32;System.Byte[];System.Byte[];System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.CreateWellKnownSid(System.Int32;System.Byte[];System.Byte[];System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DecryptFile" uniqueID="DecryptFile(System.String;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DecryptFile(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DeleteFile" uniqueID="DeleteFile(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DeleteFile(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DeleteVolumeMountPoint" uniqueID="DeleteVolumeMountPoint(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DeleteVolumeMountPoint(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateHandle" uniqueID="DuplicateHandle(System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateHandle(System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateHandle" uniqueID="DuplicateHandle(System.IntPtr;System.IntPtr;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateHandle(System.IntPtr;System.IntPtr;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateTokenEx" uniqueID="DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Security.Principal.TokenAccessLevels;System.IntPtr;Microsoft.Win32.Win32Native+SECURITY_IMPERSONATION_LEVEL;System.Security.Principal.TokenType;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Security.Principal.TokenAccessLevels;System.IntPtr;Microsoft.Win32.Win32Native+SECURITY_IMPERSONATION_LEVEL;System.Security.Principal.TokenType;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateTokenEx" uniqueID="DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.IntPtr;System.UInt32;System.UInt32;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.IntPtr;System.UInt32;System.UInt32;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EncryptFile" uniqueID="EncryptFile(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.EncryptFile(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ExpandEnvironmentStrings" uniqueID="ExpandEnvironmentStrings(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ExpandEnvironmentStrings(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FillConsoleOutputAttribute" uniqueID="FillConsoleOutputAttribute(System.IntPtr;System.Int16;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FillConsoleOutputAttribute(System.IntPtr;System.Int16;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FillConsoleOutputCharacter" uniqueID="FillConsoleOutputCharacter(System.IntPtr;System.Char;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FillConsoleOutputCharacter(System.IntPtr;System.Char;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindClose" uniqueID="FindClose(System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FindClose(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindFirstFile" uniqueID="FindFirstFile(System.String;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):Microsoft.Win32.SafeHandles.SafeFindHandle">
				<signature>Microsoft.Win32.Win32Native.FindFirstFile(System.String;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):Microsoft.Win32.SafeHandles.SafeFindHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindNLSString" uniqueID="FindNLSString(System.Int32;System.Int32;System.Char;System.Int32;System.Char;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.FindNLSString(System.Int32;System.Int32;System.Char;System.Int32;System.Char;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindNextFile" uniqueID="FindNextFile(Microsoft.Win32.SafeHandles.SafeFindHandle;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FindNextFile(Microsoft.Win32.SafeHandles.SafeFindHandle;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FormatMessage" uniqueID="FormatMessage(System.Int32;System.IntPtr;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.FormatMessage(System.Int32;System.IntPtr;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetACP" uniqueID="GetACP():System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetACP():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCalendarInfo" uniqueID="GetCalendarInfo(System.Int32;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetCalendarInfo(System.Int32;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetComputerName" uniqueID="GetComputerName(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetComputerName(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleCP" uniqueID="GetConsoleCP():System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetConsoleCP():System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleCursorInfo" uniqueID="GetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleMode" uniqueID="GetConsoleMode(System.IntPtr;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetConsoleMode(System.IntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleOutputCP" uniqueID="GetConsoleOutputCP():System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetConsoleOutputCP():System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleScreenBufferInfo" uniqueID="GetConsoleScreenBufferInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetConsoleScreenBufferInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleTitle" uniqueID="GetConsoleTitle(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetConsoleTitle(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentDirectory" uniqueID="GetCurrentDirectory(System.Int32;System.Text.StringBuilder):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetCurrentDirectory(System.Int32;System.Text.StringBuilder):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentProcess" uniqueID="GetCurrentProcess():System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetCurrentProcess():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentProcessId" uniqueID="GetCurrentProcessId():System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetCurrentProcessId():System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDiskFreeSpaceEx" uniqueID="GetDiskFreeSpaceEx(System.String;System.Int64;System.Int64;System.Int64):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetDiskFreeSpaceEx(System.String;System.Int64;System.Int64;System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDriveType" uniqueID="GetDriveType(System.String):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetDriveType(System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetEnvironmentVariable" uniqueID="GetEnvironmentVariable(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetEnvironmentVariable(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileAttributesEx" uniqueID="GetFileAttributesEx(System.String;System.Int32;Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetFileAttributesEx(System.String;System.Int32;Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileSize" uniqueID="GetFileSize(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFileSize(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileType" uniqueID="GetFileType(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFileType(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFullPathName" uniqueID="GetFullPathName(System.Char;System.Int32;System.Char;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFullPathName(System.Char;System.Int32;System.Char;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFullPathName" uniqueID="GetFullPathName(System.Char[];System.Int32;System.Char[];System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFullPathName(System.Char[];System.Int32;System.Char[];System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetKeyState" uniqueID="GetKeyState(System.Int32):System.Int16">
				<signature>Microsoft.Win32.Win32Native.GetKeyState(System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLargestConsoleWindowSize" uniqueID="GetLargestConsoleWindowSize(System.IntPtr):Microsoft.Win32.Win32Native+COORD">
				<signature>Microsoft.Win32.Win32Native.GetLargestConsoleWindowSize(System.IntPtr):Microsoft.Win32.Win32Native+COORD</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLogicalDrives" uniqueID="GetLogicalDrives():System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetLogicalDrives():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLongPathName" uniqueID="GetLongPathName(System.Char;System.Char;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetLongPathName(System.Char;System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLongPathName" uniqueID="GetLongPathName(System.Char[];System.Char[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetLongPathName(System.Char[];System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLongPathName" uniqueID="GetLongPathName(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetLongPathName(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMessage" uniqueID="GetMessage(System.Int32):System.String">
				<signature>Microsoft.Win32.Win32Native.GetMessage(System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetProcessWindowStation" uniqueID="GetProcessWindowStation():System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetProcessWindowStation():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSecurityDescriptorLength" uniqueID="GetSecurityDescriptorLength(System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetSecurityDescriptorLength(System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSecurityInfoByHandle" uniqueID="GetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSecurityInfoByName" uniqueID="GetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetStdHandle" uniqueID="GetStdHandle(System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetStdHandle(System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSystemDirectory" uniqueID="GetSystemDirectory(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetSystemDirectory(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSystemInfo" uniqueID="GetSystemInfo(Microsoft.Win32.Win32Native+SYSTEM_INFO):System.Void">
				<signature>Microsoft.Win32.Win32Native.GetSystemInfo(Microsoft.Win32.Win32Native+SYSTEM_INFO):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTempFileName" uniqueID="GetTempFileName(System.String;System.String;System.UInt32;System.Text.StringBuilder):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetTempFileName(System.String;System.String;System.UInt32;System.Text.StringBuilder):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTempPath" uniqueID="GetTempPath(System.Int32;System.Text.StringBuilder):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetTempPath(System.Int32;System.Text.StringBuilder):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTokenInformation" uniqueID="GetTokenInformation(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetTokenInformation(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTokenInformation" uniqueID="GetTokenInformation(System.IntPtr;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetTokenInformation(System.IntPtr;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUserName" uniqueID="GetUserName(System.Text.StringBuilder;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetUserName(System.Text.StringBuilder;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUserNameEx" uniqueID="GetUserNameEx(System.Int32;System.Text.StringBuilder;System.Int32):System.Byte">
				<signature>Microsoft.Win32.Win32Native.GetUserNameEx(System.Int32;System.Text.StringBuilder;System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUserObjectInformation" uniqueID="GetUserObjectInformation(System.IntPtr;System.Int32;Microsoft.Win32.Win32Native+USEROBJECTFLAGS;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetUserObjectInformation(System.IntPtr;System.Int32;Microsoft.Win32.Win32Native+USEROBJECTFLAGS;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetVersionEx" uniqueID="GetVersionEx(Microsoft.Win32.Win32Native+OSVERSIONINFO):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetVersionEx(Microsoft.Win32.Win32Native+OSVERSIONINFO):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetVersionEx" uniqueID="GetVersionEx(Microsoft.Win32.Win32Native+OSVERSIONINFOEX):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetVersionEx(Microsoft.Win32.Win32Native+OSVERSIONINFOEX):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetVolumeInformation" uniqueID="GetVolumeInformation(System.String;System.Text.StringBuilder;System.Int32;System.Int32;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetVolumeInformation(System.String;System.Text.StringBuilder;System.Int32;System.Int32;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetWindowsAccountDomainSid" uniqueID="GetWindowsAccountDomainSid(System.Byte[];System.Byte[];System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetWindowsAccountDomainSid(System.Byte[];System.Byte[];System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetWindowsDirectory" uniqueID="GetWindowsDirectory(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetWindowsDirectory(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GlobalMemoryStatus" uniqueID="GlobalMemoryStatus(Microsoft.Win32.Win32Native+MEMORYSTATUS):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GlobalMemoryStatus(Microsoft.Win32.Win32Native+MEMORYSTATUS):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GlobalMemoryStatusEx" uniqueID="GlobalMemoryStatusEx(Microsoft.Win32.Win32Native+MEMORYSTATUSEX):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GlobalMemoryStatusEx(Microsoft.Win32.Win32Native+MEMORYSTATUSEX):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsEqualDomainSid" uniqueID="IsEqualDomainSid(System.Byte[];System.Byte[];System.Boolean):System.Int32">
				<signature>Microsoft.Win32.Win32Native.IsEqualDomainSid(System.Byte[];System.Byte[];System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsWellKnownSid" uniqueID="IsWellKnownSid(System.Byte[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.IsWellKnownSid(System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LCMapStringW" uniqueID="LCMapStringW(System.Int32;System.Int32;System.Char;System.Int32;System.Char;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LCMapStringW(System.Int32;System.Int32;System.Char;System.Int32;System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalAlloc" uniqueID="LocalAlloc(System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeLocalAllocHandle">
				<signature>Microsoft.Win32.Win32Native.LocalAlloc(System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeLocalAllocHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalAlloc_NoSafeHandle" uniqueID="LocalAlloc_NoSafeHandle(System.Int32;System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.LocalAlloc_NoSafeHandle(System.Int32;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalFree" uniqueID="LocalFree(System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.LocalFree(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalReAlloc" uniqueID="LocalReAlloc(System.IntPtr;System.IntPtr;System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.LocalReAlloc(System.IntPtr;System.IntPtr;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LockFile" uniqueID="LockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.LockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LookupAccountName" uniqueID="LookupAccountName(System.String;System.String;System.Byte[];System.Int32;System.Text.StringBuilder;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.LookupAccountName(System.String;System.String;System.Byte[];System.Int32;System.Text.StringBuilder;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LookupPrivilegeValue" uniqueID="LookupPrivilegeValue(System.String;System.String;Microsoft.Win32.Win32Native+LUID):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.LookupPrivilegeValue(System.String;System.String;Microsoft.Win32.Win32Native+LUID):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaClose" uniqueID="LsaClose(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaClose(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaConnectUntrusted" uniqueID="LsaConnectUntrusted(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaConnectUntrusted(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaDeregisterLogonProcess" uniqueID="LsaDeregisterLogonProcess(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaDeregisterLogonProcess(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaFreeMemory" uniqueID="LsaFreeMemory(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaFreeMemory(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaFreeReturnBuffer" uniqueID="LsaFreeReturnBuffer(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaFreeReturnBuffer(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaGetLogonSessionData" uniqueID="LsaGetLogonSessionData(Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaGetLogonSessionData(Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLogonUser" uniqueID="LsaLogonUser(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32;System.UInt32;System.IntPtr;System.UInt32;System.IntPtr;Microsoft.Win32.Win32Native+TOKEN_SOURCE;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle;System.UInt32;Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeTokenHandle;Microsoft.Win32.Win32Native+QUOTA_LIMITS;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaLogonUser(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32;System.UInt32;System.IntPtr;System.UInt32;System.IntPtr;Microsoft.Win32.Win32Native+TOKEN_SOURCE;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle;System.UInt32;Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeTokenHandle;Microsoft.Win32.Win32Native+QUOTA_LIMITS;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupAuthenticationPackage" uniqueID="LsaLookupAuthenticationPackage(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupAuthenticationPackage(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupNames" uniqueID="LsaLookupNames(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupNames(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupNames2" uniqueID="LsaLookupNames2(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupNames2(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupSids" uniqueID="LsaLookupSids(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.IntPtr[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupSids(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.IntPtr[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaNtStatusToWinError" uniqueID="LsaNtStatusToWinError(System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaNtStatusToWinError(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaOpenPolicy" uniqueID="LsaOpenPolicy(System.String;Microsoft.Win32.Win32Native+LSA_OBJECT_ATTRIBUTES;System.Int32;Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaOpenPolicy(System.String;Microsoft.Win32.Win32Native+LSA_OBJECT_ATTRIBUTES;System.Int32;Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaRegisterLogonProcess" uniqueID="LsaRegisterLogonProcess(Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaRegisterLogonProcess(Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MakeHRFromErrorCode" uniqueID="MakeHRFromErrorCode(System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.MakeHRFromErrorCode(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MapViewOfFile" uniqueID="MapViewOfFile(Microsoft.Win32.SafeHandles.SafeFileMappingHandle;System.UInt32;System.UInt32;System.UInt32;System.UIntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.MapViewOfFile(Microsoft.Win32.SafeHandles.SafeFileMappingHandle;System.UInt32;System.UInt32;System.UInt32;System.UIntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MoveFile" uniqueID="MoveFile(System.String;System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.MoveFile(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenEvent" uniqueID="OpenEvent(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.OpenEvent(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenMutex" uniqueID="OpenMutex(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.OpenMutex(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenProcessToken" uniqueID="OpenProcessToken(System.IntPtr;System.Security.Principal.TokenAccessLevels;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.OpenProcessToken(System.IntPtr;System.Security.Principal.TokenAccessLevels;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PeekConsoleInput" uniqueID="PeekConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.PeekConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadConsoleInput" uniqueID="ReadConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReadConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadConsoleOutput" uniqueID="ReadConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReadConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadFile" uniqueID="ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadFile" uniqueID="ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegConnectRegistry" uniqueID="RegConnectRegistry(System.String;Microsoft.Win32.SafeHandles.SafeRegistryHandle;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegConnectRegistry(System.String;Microsoft.Win32.SafeHandles.SafeRegistryHandle;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegCreateKeyEx" uniqueID="RegCreateKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.String;System.Int32;System.Int32;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegCreateKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.String;System.Int32;System.Int32;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegDeleteKey" uniqueID="RegDeleteKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegDeleteKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegDeleteValue" uniqueID="RegDeleteValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegDeleteValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegEnumKeyEx" uniqueID="RegEnumKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Text.StringBuilder;System.Int32;System.Int32[];System.Text.StringBuilder;System.Int32[];System.Int64[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegEnumKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Text.StringBuilder;System.Int32;System.Int32[];System.Text.StringBuilder;System.Int32[];System.Int64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegEnumValue" uniqueID="RegEnumValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr;System.Int32[];System.Byte[];System.Int32[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegEnumValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr;System.Int32[];System.Byte[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegEnumValueA" uniqueID="RegEnumValueA(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr;System.Int32[];System.Byte[];System.Int32[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegEnumValueA(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr;System.Int32[];System.Byte[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegFlushKey" uniqueID="RegFlushKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegFlushKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegOpenKeyEx" uniqueID="RegOpenKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegOpenKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryInfoKey" uniqueID="RegQueryInfoKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Text.StringBuilder;System.Int32[];System.IntPtr;System.Int32;System.Int32[];System.Int32[];System.Int32;System.Int32[];System.Int32[];System.Int32[];System.Int32[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryInfoKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Text.StringBuilder;System.Int32[];System.IntPtr;System.Int32;System.Int32[];System.Int32[];System.Int32;System.Int32[];System.Int32[];System.Int32[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Byte[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Char[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int64;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int64;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Byte[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int64;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int64;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.String;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReleaseMutex" uniqueID="ReleaseMutex(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReleaseMutex(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RemoveDirectory" uniqueID="RemoveDirectory(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.RemoveDirectory(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReplaceFile" uniqueID="ReplaceFile(System.String;System.String;System.String;System.Int32;System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReplaceFile(System.String;System.String;System.String;System.Int32;System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ResetEvent" uniqueID="ResetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ResetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SHGetFolderPath" uniqueID="SHGetFolderPath(System.IntPtr;System.Int32;System.IntPtr;System.Int32;System.Text.StringBuilder):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SHGetFolderPath(System.IntPtr;System.Int32;System.IntPtr;System.Int32;System.Text.StringBuilder):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SafeCreateFile" uniqueID="SafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>Microsoft.Win32.Win32Native.SafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SendMessageTimeout" uniqueID="SendMessageTimeout(System.IntPtr;System.Int32;System.IntPtr;System.String;System.UInt32;System.UInt32;System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.SendMessageTimeout(System.IntPtr;System.Int32;System.IntPtr;System.String;System.UInt32;System.UInt32;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCP" uniqueID="SetConsoleCP(System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCP(System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCtrlHandler" uniqueID="SetConsoleCtrlHandler(Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCtrlHandler(Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCursorInfo" uniqueID="SetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCursorPosition" uniqueID="SetConsoleCursorPosition(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCursorPosition(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleMode" uniqueID="SetConsoleMode(System.IntPtr;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleMode(System.IntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleOutputCP" uniqueID="SetConsoleOutputCP(System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleOutputCP(System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleScreenBufferSize" uniqueID="SetConsoleScreenBufferSize(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleScreenBufferSize(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleTextAttribute" uniqueID="SetConsoleTextAttribute(System.IntPtr;System.Int16):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleTextAttribute(System.IntPtr;System.Int16):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleTitle" uniqueID="SetConsoleTitle(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleTitle(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleWindowInfo" uniqueID="SetConsoleWindowInfo(System.IntPtr;System.Boolean;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleWindowInfo(System.IntPtr;System.Boolean;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetCurrentDirectory" uniqueID="SetCurrentDirectory(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetCurrentDirectory(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetEndOfFile" uniqueID="SetEndOfFile(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetEndOfFile(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetEnvironmentVariable" uniqueID="SetEnvironmentVariable(System.String;System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetEnvironmentVariable(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetErrorMode" uniqueID="SetErrorMode(System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SetErrorMode(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetEvent" uniqueID="SetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetFileAttributes" uniqueID="SetFileAttributes(System.String;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetFileAttributes(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetFilePointer" uniqueID="SetFilePointer(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int64;System.IO.SeekOrigin;System.Int32):System.Int64">
				<signature>Microsoft.Win32.Win32Native.SetFilePointer(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int64;System.IO.SeekOrigin;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="SetFilePointerWin32" uniqueID="SetFilePointerWin32(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SetFilePointerWin32(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetFileTime" uniqueID="SetFileTime(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetFileTime(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetLastError" uniqueID="SetLastError(System.Int32):System.Void">
				<signature>Microsoft.Win32.Win32Native.SetLastError(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetSecurityInfoByHandle" uniqueID="SetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.SetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetSecurityInfoByName" uniqueID="SetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.SetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetVolumeLabel" uniqueID="SetVolumeLabel(System.String;System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetVolumeLabel(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysAllocStringLen" uniqueID="SysAllocStringLen(System.String;System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.SysAllocStringLen(System.String;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysFreeString" uniqueID="SysFreeString(System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.SysFreeString(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysStringLen" uniqueID="SysStringLen(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SysStringLen(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SystemFunction040" uniqueID="SystemFunction040(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SystemFunction040(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SystemFunction041" uniqueID="SystemFunction041(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SystemFunction041(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnlockFile" uniqueID="UnlockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.UnlockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnmapViewOfFile" uniqueID="UnmapViewOfFile(System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.UnmapViewOfFile(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateFile" uniqueID="UnsafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>Microsoft.Win32.Win32Native.UnsafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VirtualAlloc" uniqueID="VirtualAlloc(System.Void;System.UIntPtr;System.Int32;System.Int32):System.Void">
				<signature>Microsoft.Win32.Win32Native.VirtualAlloc(System.Void;System.UIntPtr;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VirtualFree" uniqueID="VirtualFree(System.Void;System.UIntPtr;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.VirtualFree(System.Void;System.UIntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VirtualQuery" uniqueID="VirtualQuery(System.Void;Microsoft.Win32.Win32Native+MEMORY_BASIC_INFORMATION;System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.VirtualQuery(System.Void;Microsoft.Win32.Win32Native+MEMORY_BASIC_INFORMATION;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WaitForMultipleObjects" uniqueID="WaitForMultipleObjects(System.UInt32;System.IntPtr[];System.Boolean;System.UInt32):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.WaitForMultipleObjects(System.UInt32;System.IntPtr[];System.Boolean;System.UInt32):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WideCharToMultiByte" uniqueID="WideCharToMultiByte(System.UInt32;System.UInt32;System.Char;System.Int32;System.Byte;System.Int32;System.IntPtr;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.WideCharToMultiByte(System.UInt32;System.UInt32;System.Char;System.Int32;System.Byte;System.Int32;System.IntPtr;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WriteConsoleOutput" uniqueID="WriteConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.WriteConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WriteFile" uniqueID="WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WriteFile" uniqueID="WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32">
				<signature>Microsoft.Win32.Win32Native.WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ZeroMemory" uniqueID="ZeroMemory(System.IntPtr;System.UInt32):System.Void">
				<signature>Microsoft.Win32.Win32Native.ZeroMemory(System.IntPtr;System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrcpy" uniqueID="lstrcpy(System.IntPtr;System.String):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.lstrcpy(System.IntPtr;System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrcpy" uniqueID="lstrcpy(System.Text.StringBuilder;System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.lstrcpy(System.Text.StringBuilder;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlen" uniqueID="lstrlen(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.lstrlen(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlen" uniqueID="lstrlen(System.SByte[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.lstrlen(System.SByte[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlenA" uniqueID="lstrlenA(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.lstrlenA(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlenW" uniqueID="lstrlenW(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.lstrlenW(System.IntPtr):System.Int32</signature>
			</method>
		</class>
		<class name="Win32Native+SECURITY_ATTRIBUTES" uniqueID="Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES">
			<method accessibility="Public" methodKind="Member" name="Win32Native+SECURITY_ATTRIBUTES" uniqueID="Win32Native+SECURITY_ATTRIBUTES():System.Void">
				<signature>Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES.Win32Native+SECURITY_ATTRIBUTES():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+ConsoleCtrlHandlerRoutine" uniqueID="Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.BeginInvoke(System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.Invoke(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Win32Native+ConsoleCtrlHandlerRoutine" uniqueID="Win32Native+ConsoleCtrlHandlerRoutine(System.Object;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.Win32Native+ConsoleCtrlHandlerRoutine(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+OSVERSIONINFO" uniqueID="Microsoft.Win32.Win32Native+OSVERSIONINFO">
			<method accessibility="Protected" methodKind="Member" name="Win32Native+OSVERSIONINFO" uniqueID="Win32Native+OSVERSIONINFO():System.Void">
				<signature>Microsoft.Win32.Win32Native+OSVERSIONINFO.Win32Native+OSVERSIONINFO():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+UNICODE_INTPTR_STRING" uniqueID="Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING">
			<method accessibility="Protected" methodKind="Member" name="Win32Native+UNICODE_INTPTR_STRING" uniqueID="Win32Native+UNICODE_INTPTR_STRING(System.Int32;System.Int32;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING.Win32Native+UNICODE_INTPTR_STRING(System.Int32;System.Int32;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+OSVERSIONINFOEX" uniqueID="Microsoft.Win32.Win32Native+OSVERSIONINFOEX">
			<method accessibility="Public" methodKind="Member" name="Win32Native+OSVERSIONINFOEX" uniqueID="Win32Native+OSVERSIONINFOEX():System.Void">
				<signature>Microsoft.Win32.Win32Native+OSVERSIONINFOEX.Win32Native+OSVERSIONINFOEX():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+FILE_TIME" uniqueID="Microsoft.Win32.Win32Native+FILE_TIME">
			<method accessibility="Public" methodKind="Member" name="ToTicks" uniqueID="ToTicks():System.Int64">
				<signature>Microsoft.Win32.Win32Native+FILE_TIME.ToTicks():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Win32Native+FILE_TIME" uniqueID="Win32Native+FILE_TIME(System.Int64):System.Void">
				<signature>Microsoft.Win32.Win32Native+FILE_TIME.Win32Native+FILE_TIME(System.Int64):System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+MEMORYSTATUS" uniqueID="Microsoft.Win32.Win32Native+MEMORYSTATUS">
			<method accessibility="Protected" methodKind="Member" name="Win32Native+MEMORYSTATUS" uniqueID="Win32Native+MEMORYSTATUS():System.Void">
				<signature>Microsoft.Win32.Win32Native+MEMORYSTATUS.Win32Native+MEMORYSTATUS():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+MEMORYSTATUSEX" uniqueID="Microsoft.Win32.Win32Native+MEMORYSTATUSEX">
			<method accessibility="Protected" methodKind="Member" name="Win32Native+MEMORYSTATUSEX" uniqueID="Win32Native+MEMORYSTATUSEX():System.Void">
				<signature>Microsoft.Win32.Win32Native+MEMORYSTATUSEX.Win32Native+MEMORYSTATUSEX():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+USEROBJECTFLAGS" uniqueID="Microsoft.Win32.Win32Native+USEROBJECTFLAGS">
			<method accessibility="Public" methodKind="Member" name="Win32Native+USEROBJECTFLAGS" uniqueID="Win32Native+USEROBJECTFLAGS():System.Void">
				<signature>Microsoft.Win32.Win32Native+USEROBJECTFLAGS.Win32Native+USEROBJECTFLAGS():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+WIN32_FIND_DATA" uniqueID="Microsoft.Win32.Win32Native+WIN32_FIND_DATA">
			<method accessibility="Public" methodKind="Member" name="Win32Native+WIN32_FIND_DATA" uniqueID="Win32Native+WIN32_FIND_DATA():System.Void">
				<signature>Microsoft.Win32.Win32Native+WIN32_FIND_DATA.Win32Native+WIN32_FIND_DATA():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.Generic">
		<class name="IEnumerable&lt;System.Char&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
		</class>
		<class name="IList&lt;System.String&gt;" uniqueID="System.Collections.Generic.IList&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.Insert(System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.String&gt;.set_Item(System.Int32;System.String):System.Void</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.String&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.String&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.String;System.String):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.String&gt;.Compare(System.String;System.String):System.Int32</signature>
			</method>
		</class>
		<class name="List&lt;System.String&gt;" uniqueID="System.Collections.Generic.List&lt;System.String&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="VerifyValueType" uniqueID="VerifyValueType(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.VerifyValueType(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.BinarySearch(System.Int32;System.Int32;System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.String):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.BinarySearch(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.BinarySearch(System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.String[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.CopyTo(System.Int32;System.String[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.CopyTo(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Exists(System.Predicate&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.String&gt;):System.String">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Find(System.Predicate&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.String&gt;):System.Collections.Generic.List&lt;System.String&gt;">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindAll(System.Predicate&lt;System.String&gt;):System.Collections.Generic.List&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindIndex(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.String&gt;):System.String">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindLast(System.Predicate&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.FindLastIndex(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.ForEach(System.Action&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.String&gt;">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.IndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.IndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Insert(System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.LastIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.LastIndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.LastIndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.String&gt;" uniqueID="List&lt;System.String&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.List&lt;System.String&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.String&gt;" uniqueID="List&lt;System.String&gt;(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.List&lt;System.String&gt;(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.String&gt;" uniqueID="List&lt;System.String&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.List&lt;System.String&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.RemoveAll(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Sort(System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Sort(System.Comparison&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.String[]">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.ToArray():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.TrueForAll(System.Predicate&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.List&lt;System.String&gt;.set_Item(System.Int32;System.String):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Char&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Char">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Char&gt;.get_Current():System.Char</signature>
			</method>
		</class>
		<class name="List`1" uniqueID="System.Collections.Generic.List`1">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List`1.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List`1.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="VerifyValueType" uniqueID="VerifyValueType(System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.VerifyValueType(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Void">
				<signature>System.Collections.Generic.List`1.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.List`1.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(System.Int32;System.Int32;System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.String):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(System.String;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List`1.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.List`1.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.String[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(System.Int32;System.String[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[]):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.List`1.Exists(System.Predicate&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.String&gt;):System.String">
				<signature>System.Collections.Generic.List`1.Find(System.Predicate&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.String&gt;):System.Collections.Generic.List&lt;System.String&gt;">
				<signature>System.Collections.Generic.List`1.FindAll(System.Predicate&lt;System.String&gt;):System.Collections.Generic.List&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.String&gt;):System.String">
				<signature>System.Collections.Generic.List`1.FindLast(System.Predicate&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Int32;System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.ForEach(System.Action&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.List`1.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.String&gt;">
				<signature>System.Collections.Generic.List`1.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.List`1.Insert(System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1():System.Void">
				<signature>System.Collections.Generic.List`1.List`1():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.List`1(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.List`1(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.List`1.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.RemoveAll(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List`1.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List`1.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Comparison&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.List`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List`1.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.String[]">
				<signature>System.Collections.Generic.List`1.ToArray():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List`1.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.List`1.TrueForAll(System.Predicate&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List`1.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List`1.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Generic.List`1.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.String):System.Void">
				<signature>System.Collections.Generic.List`1.set_Item(System.Int32;System.String):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current():System.String</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.String&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.String&gt;" uniqueID="List`1+Enumerator&lt;System.String&gt;(System.Collections.Generic.List&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;.List`1+Enumerator&lt;System.String&gt;(System.Collections.Generic.List&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.String&gt;.get_Current():System.String</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.InteropServices">
		<class name="_Exception" uniqueID="System.Runtime.InteropServices._Exception">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Exception.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseException" uniqueID="GetBaseException():System.Exception">
				<signature>System.Runtime.InteropServices._Exception.GetBaseException():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._Exception.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._Exception.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._Exception.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpLink" uniqueID="get_HelpLink():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_HelpLink():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InnerException" uniqueID="get_InnerException():System.Exception">
				<signature>System.Runtime.InteropServices._Exception.get_InnerException():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Message" uniqueID="get_Message():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_Message():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Source" uniqueID="get_Source():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_Source():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StackTrace" uniqueID="get_StackTrace():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_StackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TargetSite" uniqueID="get_TargetSite():System.Reflection.MethodBase">
				<signature>System.Runtime.InteropServices._Exception.get_TargetSite():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpLink" uniqueID="set_HelpLink(System.String):System.Void">
				<signature>System.Runtime.InteropServices._Exception.set_HelpLink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Source" uniqueID="set_Source(System.String):System.Void">
				<signature>System.Runtime.InteropServices._Exception.set_Source(System.String):System.Void</signature>
			</method>
		</class>
		<class name="_MemberInfo" uniqueID="System.Runtime.InteropServices._MemberInfo">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._MemberInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._MemberInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._MemberInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._MemberInfo.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._MemberInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._MemberInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.get_ReflectedType():System.Type</signature>
			</method>
		</class>
		<class name="_Type" uniqueID="System.Runtime.InteropServices._Type">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.Equals(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindInterfaces" uniqueID="FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]">
				<signature>System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindMembers" uniqueID="FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetArrayRank" uniqueID="GetArrayRank():System.Int32">
				<signature>System.Runtime.InteropServices._Type.GetArrayRank():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Type[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Type[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors():System.Reflection.ConstructorInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetConstructors():System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDefaultMembers" uniqueID="GetDefaultMembers():System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetDefaultMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetElementType" uniqueID="GetElementType():System.Type">
				<signature>System.Runtime.InteropServices._Type.GetElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String):System.Reflection.EventInfo">
				<signature>System.Runtime.InteropServices._Type.GetEvent(System.String):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo">
				<signature>System.Runtime.InteropServices._Type.GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents():System.Reflection.EventInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetEvents():System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String):System.Reflection.FieldInfo">
				<signature>System.Runtime.InteropServices._Type.GetField(System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Runtime.InteropServices._Type.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields():System.Reflection.FieldInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetFields():System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._Type.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetInterface(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String;System.Boolean):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetInterface(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaceMap" uniqueID="GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping">
				<signature>System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaces" uniqueID="GetInterfaces():System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetInterfaces():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers():System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods():System.Reflection.MethodInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMethods():System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetNestedType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String;System.Reflection.BindingFlags):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetNestedType(System.String;System.Reflection.BindingFlags):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes():System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetNestedTypes():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes(System.Reflection.BindingFlags):System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties():System.Reflection.PropertyInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetProperties():System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._Type.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsAssignableFrom" uniqueID="IsAssignableFrom(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubclassOf" uniqueID="IsSubclassOf(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsSubclassOf(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._Type.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Assembly" uniqueID="get_Assembly():System.Reflection.Assembly">
				<signature>System.Runtime.InteropServices._Type.get_Assembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AssemblyQualifiedName" uniqueID="get_AssemblyQualifiedName():System.String">
				<signature>System.Runtime.InteropServices._Type.get_AssemblyQualifiedName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.TypeAttributes">
				<signature>System.Runtime.InteropServices._Type.get_Attributes():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseType" uniqueID="get_BaseType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_BaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FullName" uniqueID="get_FullName():System.String">
				<signature>System.Runtime.InteropServices._Type.get_FullName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GUID" uniqueID="get_GUID():System.Guid">
				<signature>System.Runtime.InteropServices._Type.get_GUID():System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasElementType" uniqueID="get_HasElementType():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_HasElementType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAnsiClass" uniqueID="get_IsAnsiClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAnsiClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsArray" uniqueID="get_IsArray():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoClass" uniqueID="get_IsAutoClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAutoClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoLayout" uniqueID="get_IsAutoLayout():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAutoLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCOMObject" uniqueID="get_IsCOMObject():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsCOMObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClass" uniqueID="get_IsClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsContextful" uniqueID="get_IsContextful():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsContextful():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEnum" uniqueID="get_IsEnum():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsEnum():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsExplicitLayout" uniqueID="get_IsExplicitLayout():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsExplicitLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsImport" uniqueID="get_IsImport():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsImport():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInterface" uniqueID="get_IsInterface():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsInterface():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLayoutSequential" uniqueID="get_IsLayoutSequential():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsLayoutSequential():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsMarshalByRef" uniqueID="get_IsMarshalByRef():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsMarshalByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedAssembly" uniqueID="get_IsNestedAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamANDAssem" uniqueID="get_IsNestedFamANDAssem():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamANDAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamORAssem" uniqueID="get_IsNestedFamORAssem():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamORAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamily" uniqueID="get_IsNestedFamily():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPrivate" uniqueID="get_IsNestedPrivate():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPublic" uniqueID="get_IsNestedPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotPublic" uniqueID="get_IsNotPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNotPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPointer" uniqueID="get_IsPointer():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPointer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrimitive" uniqueID="get_IsPrimitive():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPrimitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSealed" uniqueID="get_IsSealed():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSealed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSerializable" uniqueID="get_IsSerializable():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSerializable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsUnicodeClass" uniqueID="get_IsUnicodeClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsUnicodeClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValueType" uniqueID="get_IsValueType():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsValueType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._Type.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Runtime.InteropServices._Type.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._Type.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Runtime.InteropServices._Type.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_ReflectedType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeHandle" uniqueID="get_TypeHandle():System.RuntimeTypeHandle">
				<signature>System.Runtime.InteropServices._Type.get_TypeHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeInitializer" uniqueID="get_TypeInitializer():System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.get_TypeInitializer():System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections">
		<class name="ArrayList" uniqueID="System.Collections.ArrayList">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.ArrayList.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Adapter" uniqueID="Adapter(System.Collections.IList):System.Collections.ArrayList">
				<signature>System.Collections.ArrayList.Adapter(System.Collections.IList):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FixedSize" uniqueID="FixedSize(System.Collections.ArrayList):System.Collections.ArrayList">
				<signature>System.Collections.ArrayList.FixedSize(System.Collections.ArrayList):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FixedSize" uniqueID="FixedSize(System.Collections.IList):System.Collections.IList">
				<signature>System.Collections.ArrayList.FixedSize(System.Collections.IList):System.Collections.IList</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadOnly" uniqueID="ReadOnly(System.Collections.ArrayList):System.Collections.ArrayList">
				<signature>System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadOnly" uniqueID="ReadOnly(System.Collections.IList):System.Collections.IList">
				<signature>System.Collections.ArrayList.ReadOnly(System.Collections.IList):System.Collections.IList</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Repeat" uniqueID="Repeat(System.Object;System.Int32):System.Collections.ArrayList">
				<signature>System.Collections.ArrayList.Repeat(System.Object;System.Int32):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.ArrayList):System.Collections.ArrayList">
				<signature>System.Collections.ArrayList.Synchronized(System.Collections.ArrayList):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.IList):System.Collections.IList">
				<signature>System.Collections.ArrayList.Synchronized(System.Collections.IList):System.Collections.IList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Int32">
				<signature>System.Collections.ArrayList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.ICollection):System.Void">
				<signature>System.Collections.ArrayList.AddRange(System.Collections.ICollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ArrayList" uniqueID="ArrayList():System.Void">
				<signature>System.Collections.ArrayList.ArrayList():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ArrayList" uniqueID="ArrayList(System.Boolean):System.Void">
				<signature>System.Collections.ArrayList.ArrayList(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ArrayList" uniqueID="ArrayList(System.Collections.ICollection):System.Void">
				<signature>System.Collections.ArrayList.ArrayList(System.Collections.ICollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ArrayList" uniqueID="ArrayList(System.Int32):System.Void">
				<signature>System.Collections.ArrayList.ArrayList(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Collections.ArrayList.BinarySearch(System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Object):System.Int32">
				<signature>System.Collections.ArrayList.BinarySearch(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Collections.ArrayList.BinarySearch(System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.ArrayList.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.Collections.ArrayList.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Collections.ArrayList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array):System.Void">
				<signature>System.Collections.ArrayList.CopyTo(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ArrayList.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ArrayList.CopyTo(System.Int32;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.ArrayList.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ArrayList.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator(System.Int32;System.Int32):System.Collections.IEnumerator">
				<signature>System.Collections.ArrayList.GetEnumerator(System.Int32;System.Int32):System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.ArrayList">
				<signature>System.Collections.ArrayList.GetRange(System.Int32;System.Int32):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ArrayList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object;System.Int32):System.Int32">
				<signature>System.Collections.ArrayList.IndexOf(System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.ArrayList.IndexOf(System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ArrayList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.ICollection):System.Void">
				<signature>System.Collections.ArrayList.InsertRange(System.Int32;System.Collections.ICollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Object):System.Int32">
				<signature>System.Collections.ArrayList.LastIndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Object;System.Int32):System.Int32">
				<signature>System.Collections.ArrayList.LastIndexOf(System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.ArrayList.LastIndexOf(System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Collections.ArrayList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ArrayList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ArrayList.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.ArrayList.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.ArrayList.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetRange" uniqueID="SetRange(System.Int32;System.Collections.ICollection):System.Void">
				<signature>System.Collections.ArrayList.SetRange(System.Int32;System.Collections.ICollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.ArrayList.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.IComparer):System.Void">
				<signature>System.Collections.ArrayList.Sort(System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.IComparer):System.Void">
				<signature>System.Collections.ArrayList.Sort(System.Int32;System.Int32;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Object[]">
				<signature>System.Collections.ArrayList.ToArray():System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray(System.Type):System.Array">
				<signature>System.Collections.ArrayList.ToArray(System.Type):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimToSize" uniqueID="TrimToSize():System.Void">
				<signature>System.Collections.ArrayList.TrimToSize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.ArrayList.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ArrayList.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ArrayList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ArrayList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ArrayList.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Collections.ArrayList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Collections.ArrayList.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.ArrayList.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ArrayList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable" uniqueID="System.Collections.IEnumerable">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
		</class>
		<class name="ICollection" uniqueID="System.Collections.ICollection">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ICollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
		</class>
		<class name="IList" uniqueID="System.Collections.IList">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Int32">
				<signature>System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object):System.Int32">
				<signature>System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator" uniqueID="System.Collections.IEnumerator">
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.IEnumerator.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Object">
				<signature>System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
		</class>
	</package>
	<package name="System.Reflection">
		<class name="ICustomAttributeProvider" uniqueID="System.Reflection.ICustomAttributeProvider">
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Reflection.ICustomAttributeProvider.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
		</class>
		<class name="IReflect" uniqueID="System.Reflection.IReflect">
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Reflection.IReflect.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Reflection.IReflect.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Reflection.IReflect.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Reflection.IReflect.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Reflection.IReflect.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Reflection.IReflect.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Reflection.IReflect.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Reflection.IReflect.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
		<class name="MemberInfo" uniqueID="System.Reflection.MemberInfo">
			<method accessibility="Protected" methodKind="Member" name="CacheEquals" uniqueID="CacheEquals(System.Object):System.Boolean">
				<signature>System.Reflection.MemberInfo.CacheEquals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Reflection.MemberInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Reflection.MemberInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberInfo" uniqueID="MemberInfo():System.Void">
				<signature>System.Reflection.MemberInfo.MemberInfo():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCacheClear" uniqueID="OnCacheClear(System.Object;System.Reflection.Cache.ClearCacheEventArgs):System.Void">
				<signature>System.Reflection.MemberInfo.OnCacheClear(System.Object;System.Reflection.Cache.ClearCacheEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetType" uniqueID="System.Runtime.InteropServices._MemberInfo.GetType():System.Type">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetTypeInfo" uniqueID="System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.Invoke" uniqueID="System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Cache" uniqueID="get_Cache():System.Reflection.Cache.InternalCache">
				<signature>System.Reflection.MemberInfo.get_Cache():System.Reflection.Cache.InternalCache</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Reflection.MemberInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Reflection.MemberInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MetadataToken" uniqueID="get_MetadataToken():System.Int32">
				<signature>System.Reflection.MemberInfo.get_MetadataToken():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MetadataTokenInternal" uniqueID="get_MetadataTokenInternal():System.Int32">
				<signature>System.Reflection.MemberInfo.get_MetadataTokenInternal():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Reflection.MemberInfo.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Reflection.MemberInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Reflection.MemberInfo.get_ReflectedType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.Serialization">
		<class name="ISerializable" uniqueID="System.Runtime.Serialization.ISerializable">
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.ObjectModel">
		<class name="ReadOnlyCollection&lt;System.String&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="VerifyValueType" uniqueID="VerifyValueType(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.VerifyValueType(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.String&gt;" uniqueID="ReadOnlyCollection&lt;System.String&gt;(System.Collections.Generic.IList&lt;System.String&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.ReadOnlyCollection&lt;System.String&gt;(System.Collections.Generic.IList&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.String):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.String):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.String):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.String">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.String):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.String&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;.get_Items():System.Collections.Generic.IList&lt;System.String&gt;</signature>
			</method>
		</class>
	</package>
	<package name="System.Resources">
		<class name="IResourceWriter" uniqueID="System.Resources.IResourceWriter">
			<method accessibility="Public" methodKind="Member" name="AddResource" uniqueID="AddResource(System.String;System.Byte[]):System.Void">
				<signature>System.Resources.IResourceWriter.AddResource(System.String;System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddResource" uniqueID="AddResource(System.String;System.Object):System.Void">
				<signature>System.Resources.IResourceWriter.AddResource(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddResource" uniqueID="AddResource(System.String;System.String):System.Void">
				<signature>System.Resources.IResourceWriter.AddResource(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Resources.IResourceWriter.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Generate" uniqueID="Generate():System.Void">
				<signature>System.Resources.IResourceWriter.Generate():System.Void</signature>
			</method>
		</class>
		<class name="ResourceWriter" uniqueID="System.Resources.ResourceWriter">
			<method accessibility="Private" methodKind="Static" name="Write7BitEncodedInt" uniqueID="Write7BitEncodedInt(System.IO.BinaryWriter;System.Int32):System.Void">
				<signature>System.Resources.ResourceWriter.Write7BitEncodedInt(System.IO.BinaryWriter;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddResource" uniqueID="AddResource(System.String;System.Byte[]):System.Void">
				<signature>System.Resources.ResourceWriter.AddResource(System.String;System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddResource" uniqueID="AddResource(System.String;System.Object):System.Void">
				<signature>System.Resources.ResourceWriter.AddResource(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddResource" uniqueID="AddResource(System.String;System.String):System.Void">
				<signature>System.Resources.ResourceWriter.AddResource(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddResourceData" uniqueID="AddResourceData(System.String;System.String;System.Byte[]):System.Void">
				<signature>System.Resources.ResourceWriter.AddResourceData(System.String;System.String;System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Resources.ResourceWriter.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Resources.ResourceWriter.Dispose():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Resources.ResourceWriter.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindTypeCode" uniqueID="FindTypeCode(System.Object;System.Collections.Generic.List&lt;System.String&gt;):System.Resources.ResourceTypeCode">
				<signature>System.Resources.ResourceWriter.FindTypeCode(System.Object;System.Collections.Generic.List&lt;System.String&gt;):System.Resources.ResourceTypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Generate" uniqueID="Generate():System.Void">
				<signature>System.Resources.ResourceWriter.Generate():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResourceWriter" uniqueID="ResourceWriter(System.IO.Stream):System.Void">
				<signature>System.Resources.ResourceWriter.ResourceWriter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResourceWriter" uniqueID="ResourceWriter(System.String):System.Void">
				<signature>System.Resources.ResourceWriter.ResourceWriter(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteValue" uniqueID="WriteValue(System.Resources.ResourceTypeCode;System.Object;System.IO.BinaryWriter;System.Runtime.Serialization.IFormatter):System.Void">
				<signature>System.Resources.ResourceWriter.WriteValue(System.Resources.ResourceTypeCode;System.Object;System.IO.BinaryWriter;System.Runtime.Serialization.IFormatter):System.Void</signature>
			</method>
		</class>
	</package>
	<package>
		<class name="TestCase_IOT_Array" uniqueID="TestCase_IOT_Array">
			<method accessibility="Public" methodKind="Static" name="Main" uniqueID="Main(System.String[]):System.Void">
				<signature>TestCase_IOT_Array.Main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Array" uniqueID="TestCase_IOT_Array():System.Void">
				<signature>TestCase_IOT_Array.TestCase_IOT_Array():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Array.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Array.writeToVulnerableSink(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String;System.String[]):System.Void">
				<signature>TestCase_IOT_Array.writeToVulnerableSink(System.String;System.String[]):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Looping" uniqueID="TestCase_IOT_Looping">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Looping.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Looping" uniqueID="TestCase_IOT_Looping():System.Void">
				<signature>TestCase_IOT_Looping.TestCase_IOT_Looping():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Looping.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_Looping.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink2" uniqueID="writeToVulnerableSink2(System.String):System.Void">
				<signature>TestCase_IOT_Looping.writeToVulnerableSink2(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_MemberTaint" uniqueID="TestCase_IOT_MemberTaint">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_MemberTaint.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_MemberTaint" uniqueID="TestCase_IOT_MemberTaint():System.Void">
				<signature>TestCase_IOT_MemberTaint.TestCase_IOT_MemberTaint():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_MemberTaint.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink1" uniqueID="writeToVulnerableSink1(System.String):System.Void">
				<signature>TestCase_IOT_MemberTaint.writeToVulnerableSink1(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink2" uniqueID="writeToVulnerableSink2(System.String):System.Void">
				<signature>TestCase_IOT_MemberTaint.writeToVulnerableSink2(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink3" uniqueID="writeToVulnerableSink3(System.String):System.Void">
				<signature>TestCase_IOT_MemberTaint.writeToVulnerableSink3(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Branching" uniqueID="TestCase_IOT_Branching">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Branching.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Branching" uniqueID="TestCase_IOT_Branching():System.Void">
				<signature>TestCase_IOT_Branching.TestCase_IOT_Branching():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Branching.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink1" uniqueID="writeToVulnerableSink1(System.String):System.Void">
				<signature>TestCase_IOT_Branching.writeToVulnerableSink1(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink2" uniqueID="writeToVulnerableSink2(System.String):System.Void">
				<signature>TestCase_IOT_Branching.writeToVulnerableSink2(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink3" uniqueID="writeToVulnerableSink3(System.String):System.Void">
				<signature>TestCase_IOT_Branching.writeToVulnerableSink3(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Static_Assigns" uniqueID="TestCase_IOT_Static_Assigns">
			<method accessibility="Public" methodKind="Static" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Static_Assigns.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Static_Assigns.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_Static_Assigns.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Static_Assigns" uniqueID="TestCase_IOT_Static_Assigns():System.Void">
				<signature>TestCase_IOT_Static_Assigns.TestCase_IOT_Static_Assigns():System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Instance_Assigns" uniqueID="TestCase_IOT_Instance_Assigns">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Assigns.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Instance_Assigns" uniqueID="TestCase_IOT_Instance_Assigns():System.Void">
				<signature>TestCase_IOT_Instance_Assigns.TestCase_IOT_Instance_Assigns():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Instance_Assigns.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_Instance_Assigns.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Instance_Val_Encode" uniqueID="TestCase_IOT_Instance_Val_Encode">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Encode.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Instance_Val_Encode" uniqueID="TestCase_IOT_Instance_Val_Encode():System.Void">
				<signature>TestCase_IOT_Instance_Val_Encode.TestCase_IOT_Instance_Val_Encode():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="encode" uniqueID="encode(System.String):System.String">
				<signature>TestCase_IOT_Instance_Val_Encode.encode(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Instance_Val_Encode.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="validate" uniqueID="validate(System.String):System.Void">
				<signature>TestCase_IOT_Instance_Val_Encode.validate(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Instance_Val_Encode.writeToVulnerableSink(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Instance" uniqueID="TestCase_IOT_Instance">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Instance" uniqueID="TestCase_IOT_Instance():System.Void">
				<signature>TestCase_IOT_Instance.TestCase_IOT_Instance():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Instance.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_Instance.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Instance_Val_Confidence" uniqueID="TestCase_IOT_Instance_Val_Confidence">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="testLostNoValidationAvailable" uniqueID="testLostNoValidationAvailable(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.testLostNoValidationAvailable(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="testLostValidated" uniqueID="testLostValidated(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.testLostValidated(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="testLostValidationNotUsed" uniqueID="testLostValidationNotUsed(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.testLostValidationNotUsed(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="testSinkNoValidationAvailable" uniqueID="testSinkNoValidationAvailable(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.testSinkNoValidationAvailable(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="testSinkValidated" uniqueID="testSinkValidated(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.testSinkValidated(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="testSinkValidationNotUsed" uniqueID="testSinkValidationNotUsed(System.String[]):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.testSinkValidationNotUsed(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Instance_Val_Confidence" uniqueID="TestCase_IOT_Instance_Val_Confidence():System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.TestCase_IOT_Instance_Val_Confidence():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getCoveredVulnerableSource" uniqueID="getCoveredVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Instance_Val_Confidence.getCoveredVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getUnCoveredVulnerableSource" uniqueID="getUnCoveredVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Instance_Val_Confidence.getUnCoveredVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="validate" uniqueID="validate(System.String):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.validate(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToUnknownSink" uniqueID="writeToUnknownSink(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.writeToUnknownSink(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Instance_Val_Confidence.writeToVulnerableSink(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_List" uniqueID="TestCase_IOT_List">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_List.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_List" uniqueID="TestCase_IOT_List():System.Void">
				<signature>TestCase_IOT_List.TestCase_IOT_List():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_List.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String;System.Collections.IList):System.Void">
				<signature>TestCase_IOT_List.writeToVulnerableSink(System.String;System.Collections.IList):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Lost_Instance" uniqueID="TestCase_IOT_Lost_Instance">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Lost_Instance.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Lost_Instance" uniqueID="TestCase_IOT_Lost_Instance():System.Void">
				<signature>TestCase_IOT_Lost_Instance.TestCase_IOT_Lost_Instance():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Lost_Instance.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToUnknownSink" uniqueID="writeToUnknownSink(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Lost_Instance.writeToUnknownSink(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Lost_MemberTaint" uniqueID="TestCase_IOT_Lost_MemberTaint">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Lost_MemberTaint" uniqueID="TestCase_IOT_Lost_MemberTaint():System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint.TestCase_IOT_Lost_MemberTaint():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Lost_MemberTaint.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToUnknownSink1" uniqueID="writeToUnknownSink1(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint.writeToUnknownSink1(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToUnknownSink2" uniqueID="writeToUnknownSink2(System.String):System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint.writeToUnknownSink2(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToUnknownSink3" uniqueID="writeToUnknownSink3(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint.writeToUnknownSink3(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Lost_MemberTaint+TaintedStruct" uniqueID="TestCase_IOT_Lost_MemberTaint+TaintedStruct">
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Lost_MemberTaint+TaintedStruct" uniqueID="TestCase_IOT_Lost_MemberTaint+TaintedStruct():System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint+TaintedStruct.TestCase_IOT_Lost_MemberTaint+TaintedStruct():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Lost_MemberTaint+TaintedStruct" uniqueID="TestCase_IOT_Lost_MemberTaint+TaintedStruct(System.String):System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint+TaintedStruct.TestCase_IOT_Lost_MemberTaint+TaintedStruct(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getTainted" uniqueID="getTainted():System.String">
				<signature>TestCase_IOT_Lost_MemberTaint+TaintedStruct.getTainted():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="setTainted" uniqueID="setTainted(System.String):System.Void">
				<signature>TestCase_IOT_Lost_MemberTaint+TaintedStruct.setTainted(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Lost_XFile_Part1" uniqueID="TestCase_IOT_Lost_XFile_Part1">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Lost_XFile_Part1.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Lost_XFile_Part1" uniqueID="TestCase_IOT_Lost_XFile_Part1():System.Void">
				<signature>TestCase_IOT_Lost_XFile_Part1.TestCase_IOT_Lost_XFile_Part1():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Lost_XFile_Part1.getVulnerableSource(System.String):System.String</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Lost_XFile_Part2" uniqueID="TestCase_IOT_Lost_XFile_Part2">
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Lost_XFile_Part2" uniqueID="TestCase_IOT_Lost_XFile_Part2():System.Void">
				<signature>TestCase_IOT_Lost_XFile_Part2.TestCase_IOT_Lost_XFile_Part2():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToUnknownSink" uniqueID="writeToUnknownSink(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Lost_XFile_Part2.writeToUnknownSink(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_UserValidation2" uniqueID="TestCase_IOT_UserValidation2">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_UserValidation2.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_UserValidation2" uniqueID="TestCase_IOT_UserValidation2():System.Void">
				<signature>TestCase_IOT_UserValidation2.TestCase_IOT_UserValidation2():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="callValidate" uniqueID="callValidate(System.String):System.Void">
				<signature>TestCase_IOT_UserValidation2.callValidate(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="callValidateAlmostThere" uniqueID="callValidateAlmostThere(System.String):System.Void">
				<signature>TestCase_IOT_UserValidation2.callValidateAlmostThere(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="callValidateEventually" uniqueID="callValidateEventually(System.String):System.Void">
				<signature>TestCase_IOT_UserValidation2.callValidateEventually(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource():System.String">
				<signature>TestCase_IOT_UserValidation2.getVulnerableSource():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="trace1" uniqueID="trace1():System.Void">
				<signature>TestCase_IOT_UserValidation2.trace1():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="validate" uniqueID="validate(System.String):System.Void">
				<signature>TestCase_IOT_UserValidation2.validate(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_UserValidation2.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_MediumCallStack" uniqueID="TestCase_IOT_MediumCallStack">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_MediumCallStack.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_MediumCallStack" uniqueID="TestCase_IOT_MediumCallStack():System.Void">
				<signature>TestCase_IOT_MediumCallStack.TestCase_IOT_MediumCallStack():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="convertBufTostring" uniqueID="convertBufTostring(System.Byte[]):System.String">
				<signature>TestCase_IOT_MediumCallStack.convertBufTostring(System.Byte[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="createFileOutput" uniqueID="createFileOutput(System.String):System.IO.FileStream">
				<signature>TestCase_IOT_MediumCallStack.createFileOutput(System.String):System.IO.FileStream</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="createWriter" uniqueID="createWriter(System.String):System.IO.StreamWriter">
				<signature>TestCase_IOT_MediumCallStack.createWriter(System.String):System.IO.StreamWriter</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="getBuffer" uniqueID="getBuffer():System.Byte[]">
				<signature>TestCase_IOT_MediumCallStack.getBuffer():System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="getVulnSourceFromFile" uniqueID="getVulnSourceFromFile(System.String):System.String">
				<signature>TestCase_IOT_MediumCallStack.getVulnSourceFromFile(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_MediumCallStack.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="readBufFromFile" uniqueID="readBufFromFile(System.String):System.Byte[]">
				<signature>TestCase_IOT_MediumCallStack.readBufFromFile(System.String):System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="readIntoBuf" uniqueID="readIntoBuf(System.IO.FileStream;System.Byte[]):System.Void">
				<signature>TestCase_IOT_MediumCallStack.readIntoBuf(System.IO.FileStream;System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_MediumCallStack.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_MemberTaint+TaintedStruct" uniqueID="TestCase_IOT_MemberTaint+TaintedStruct">
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_MemberTaint+TaintedStruct" uniqueID="TestCase_IOT_MemberTaint+TaintedStruct():System.Void">
				<signature>TestCase_IOT_MemberTaint+TaintedStruct.TestCase_IOT_MemberTaint+TaintedStruct():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_MemberTaint+TaintedStruct" uniqueID="TestCase_IOT_MemberTaint+TaintedStruct(System.String):System.Void">
				<signature>TestCase_IOT_MemberTaint+TaintedStruct.TestCase_IOT_MemberTaint+TaintedStruct(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getTainted" uniqueID="getTainted():System.String">
				<signature>TestCase_IOT_MemberTaint+TaintedStruct.getTainted():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="setTainted" uniqueID="setTainted(System.String):System.Void">
				<signature>TestCase_IOT_MemberTaint+TaintedStruct.setTainted(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_MemberTaint_OutParam" uniqueID="TestCase_IOT_MemberTaint_OutParam">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_MemberTaint_OutParam" uniqueID="TestCase_IOT_MemberTaint_OutParam():System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam.TestCase_IOT_MemberTaint_OutParam():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getTaintedStructSource1" uniqueID="getTaintedStructSource1(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam.getTaintedStructSource1(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getTaintedStructSource2" uniqueID="getTaintedStructSource2(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam.getTaintedStructSource2(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_MemberTaint_OutParam.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink1" uniqueID="writeToVulnerableSink1(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam.writeToVulnerableSink1(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink2" uniqueID="writeToVulnerableSink2(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam.writeToVulnerableSink2(System.String;TestCase_IOT_MemberTaint_OutParam+TaintedStruct):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_MemberTaint_OutParam+TaintedStruct" uniqueID="TestCase_IOT_MemberTaint_OutParam+TaintedStruct">
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_MemberTaint_OutParam+TaintedStruct" uniqueID="TestCase_IOT_MemberTaint_OutParam+TaintedStruct():System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam+TaintedStruct.TestCase_IOT_MemberTaint_OutParam+TaintedStruct():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_MemberTaint_OutParam+TaintedStruct" uniqueID="TestCase_IOT_MemberTaint_OutParam+TaintedStruct(System.String):System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam+TaintedStruct.TestCase_IOT_MemberTaint_OutParam+TaintedStruct(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getTainted" uniqueID="getTainted():System.String">
				<signature>TestCase_IOT_MemberTaint_OutParam+TaintedStruct.getTainted():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="setTainted" uniqueID="setTainted(System.String):System.Void">
				<signature>TestCase_IOT_MemberTaint_OutParam+TaintedStruct.setTainted(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_OverlapTrace" uniqueID="TestCase_IOT_OverlapTrace">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_OverlapTrace.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_OverlapTrace" uniqueID="TestCase_IOT_OverlapTrace():System.Void">
				<signature>TestCase_IOT_OverlapTrace.TestCase_IOT_OverlapTrace():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="readFromVulnerableSource" uniqueID="readFromVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_OverlapTrace.readFromVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="writeToSinkCheck" uniqueID="writeToSinkCheck(System.String;System.String):System.Void">
				<signature>TestCase_IOT_OverlapTrace.writeToSinkCheck(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_OverlapTrace.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Recursion" uniqueID="TestCase_IOT_Recursion">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Recursion.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Recursion" uniqueID="TestCase_IOT_Recursion():System.Void">
				<signature>TestCase_IOT_Recursion.TestCase_IOT_Recursion():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="readFromVulnerableSource" uniqueID="readFromVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Recursion.readFromVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="recursiveTrim" uniqueID="recursiveTrim(System.String):System.String">
				<signature>TestCase_IOT_Recursion.recursiveTrim(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_Recursion.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Simple_Validation" uniqueID="TestCase_IOT_Simple_Validation">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Simple_Validation.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="testSinkValidated" uniqueID="testSinkValidated(System.String[]):System.Void">
				<signature>TestCase_IOT_Simple_Validation.testSinkValidated(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Simple_Validation" uniqueID="TestCase_IOT_Simple_Validation():System.Void">
				<signature>TestCase_IOT_Simple_Validation.TestCase_IOT_Simple_Validation():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getCoveredVulnerableSource" uniqueID="getCoveredVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Simple_Validation.getCoveredVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="validate" uniqueID="validate(System.String):System.Void">
				<signature>TestCase_IOT_Simple_Validation.validate(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String;System.String):System.Void">
				<signature>TestCase_IOT_Simple_Validation.writeToVulnerableSink(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_Static" uniqueID="TestCase_IOT_Static">
			<method accessibility="Public" methodKind="Static" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_Static.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_Static.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_Static.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_Static" uniqueID="TestCase_IOT_Static():System.Void">
				<signature>TestCase_IOT_Static.TestCase_IOT_Static():System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_UserValidation" uniqueID="TestCase_IOT_UserValidation">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_UserValidation.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_UserValidation" uniqueID="TestCase_IOT_UserValidation():System.Void">
				<signature>TestCase_IOT_UserValidation.TestCase_IOT_UserValidation():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource1" uniqueID="getVulnerableSource1():System.String">
				<signature>TestCase_IOT_UserValidation.getVulnerableSource1():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource2" uniqueID="getVulnerableSource2():System.String">
				<signature>TestCase_IOT_UserValidation.getVulnerableSource2():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource3" uniqueID="getVulnerableSource3():System.String">
				<signature>TestCase_IOT_UserValidation.getVulnerableSource3():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="trace1" uniqueID="trace1():System.Void">
				<signature>TestCase_IOT_UserValidation.trace1():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="trace2" uniqueID="trace2():System.Void">
				<signature>TestCase_IOT_UserValidation.trace2():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="trace3" uniqueID="trace3():System.Void">
				<signature>TestCase_IOT_UserValidation.trace3():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="validate" uniqueID="validate(System.String):System.Void">
				<signature>TestCase_IOT_UserValidation.validate(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_UserValidation.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_XFile_Part1" uniqueID="TestCase_IOT_XFile_Part1">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_XFile_Part1.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_XFile_Part1" uniqueID="TestCase_IOT_XFile_Part1():System.Void">
				<signature>TestCase_IOT_XFile_Part1.TestCase_IOT_XFile_Part1():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_XFile_Part1.getVulnerableSource(System.String):System.String</signature>
			</method>
		</class>
		<class name="TestCase_IOT_XFile_Part2" uniqueID="TestCase_IOT_XFile_Part2">
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_XFile_Part2" uniqueID="TestCase_IOT_XFile_Part2():System.Void">
				<signature>TestCase_IOT_XFile_Part2.TestCase_IOT_XFile_Part2():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="writeToVulnerableSink" uniqueID="writeToVulnerableSink(System.String):System.Void">
				<signature>TestCase_IOT_XFile_Part2.writeToVulnerableSink(System.String):System.Void</signature>
			</method>
		</class>
		<class name="TestCase_IOT_XFile_Val_Part1" uniqueID="TestCase_IOT_XFile_Val_Part1">
			<method accessibility="Public" methodKind="Static" name="main" uniqueID="main(System.String[]):System.Void">
				<signature>TestCase_IOT_XFile_Val_Part1.main(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestCase_IOT_XFile_Val_Part1" uniqueID="TestCase_IOT_XFile_Val_Part1():System.Void">
				<signature>TestCase_IOT_XFile_Val_Part1.TestCase_IOT_XFile_Val_Part1():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="getVulnerableSource" uniqueID="getVulnerableSource(System.String):System.String">
				<signature>TestCase_IOT_XFile_Val_Part1.getVulnerableSource(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="validate" uniqueID="validate(System.String):System.String">
				<signature>TestCase_IOT_XFile_Val_Part1.validate(System.String):System.String</signature>
			</method>
		</class>
	</package>
	<package name="System.Windows.Forms">
		<class name="MessageBox" uniqueID="System.Windows.Forms.MessageBox">
			<method accessibility="Private" methodKind="Static" name="PopHelpInfo" uniqueID="PopHelpInfo():System.Void">
				<signature>System.Windows.Forms.MessageBox.PopHelpInfo():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PushHelpInfo" uniqueID="PushHelpInfo(System.Windows.Forms.HelpInfo):System.Void">
				<signature>System.Windows.Forms.MessageBox.PushHelpInfo(System.Windows.Forms.HelpInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.Boolean):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.Boolean):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator;System.Object):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator;System.Object):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.String):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.String):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Show" uniqueID="Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator;System.Object):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.String;System.Windows.Forms.HelpNavigator;System.Object):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ShowCore" uniqueID="ShowCore(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.Boolean):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.ShowCore(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.Boolean):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ShowCore" uniqueID="ShowCore(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.Windows.Forms.HelpInfo):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.ShowCore(System.Windows.Forms.IWin32Window;System.String;System.String;System.Windows.Forms.MessageBoxButtons;System.Windows.Forms.MessageBoxIcon;System.Windows.Forms.MessageBoxDefaultButton;System.Windows.Forms.MessageBoxOptions;System.Windows.Forms.HelpInfo):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="Win32ToDialogResult" uniqueID="Win32ToDialogResult(System.Int32):System.Windows.Forms.DialogResult">
				<signature>System.Windows.Forms.MessageBox.Win32ToDialogResult(System.Int32):System.Windows.Forms.DialogResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_HelpInfo" uniqueID="get_HelpInfo():System.Windows.Forms.HelpInfo">
				<signature>System.Windows.Forms.MessageBox.get_HelpInfo():System.Windows.Forms.HelpInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MessageBox" uniqueID="MessageBox():System.Void">
				<signature>System.Windows.Forms.MessageBox.MessageBox():System.Void</signature>
			</method>
		</class>
	</package>
</api_info>
